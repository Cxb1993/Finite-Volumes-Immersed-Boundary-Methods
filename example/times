Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 47.14    181.21   181.21 4083765379     0.00     0.00  IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&)
 24.69    276.11    94.90 534021600     0.00     0.00  unknown::operator()(unsigned int const&, unsigned int const&)
  7.35    304.37    28.26 134064000     0.00     0.00  grid::set_unknown_values(Point2d<unsigned int> const&, unsigned int const&, double const&)
  7.21    332.08    27.71 134392320     0.00     0.00  grid::get_unknown_value(Point2d<unsigned int> const&, unsigned int const&)
  6.05    355.33    23.25 214502400     0.00     0.00  unknown::get_stencil_value(Point2d<unsigned int> const&, unknown_position::position const&, bool const&)
  1.01    359.20     3.87 534021600     0.00     0.00  unknown::operator()(Point2d<unsigned int> const&)
  0.67    361.79     2.59 24526738     0.00     0.00  std::map<Point2d<unsigned int>, cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::operator[](Point2d<unsigned int> const&)
  0.39    363.29     1.50     7350     0.20     5.40  wet_unknown::import_unknown(grid&, unsigned int const&)
  0.37    364.70     1.41     7350     0.19     5.43  wet_unknown::export_unknown(grid&, unsigned int const&)
  0.31    365.91     1.21 26812800     0.00     0.01  unknown::get_stencil_values(Point2d<unsigned int> const&)
  0.30    367.07     1.16      490     2.37   441.59  FINITE_VOLUME::reconstruction(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&)
  0.29    368.20     1.13 35750400     0.00     0.00  FINITE_VOLUME::triplet::triplet(unknown&, unknown&, unknown&, Point2d<unsigned int> const&, unknown_position::position const&)
  0.29    369.33     1.13      490     2.31   500.55  FINITE_VOLUME::evolution(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, unknown&, unknown&, unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&)
  0.27    370.37     1.04 35750400     0.00     0.00  FINITE_VOLUME::flux_y(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)
  0.25    371.34     0.97 35750400     0.00     0.00  FINITE_VOLUME::flux_x(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)
  0.23    372.21     0.87 35750400     0.00     0.00  FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&))
  0.23    373.08     0.87 17875200     0.00     0.00  FINITE_VOLUME::y_speed(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&)
  0.22    373.92     0.84 44688000     0.00     0.00  FINITE_VOLUME::triplet::triplet(unknown&, unknown&, unknown&, Point2d<unsigned int> const&)
  0.22    374.75     0.83 17875200     0.00     0.00  FINITE_VOLUME::x_speed(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&)
  0.18    375.45     0.70 26812800     0.00     0.00  FINITE_VOLUME::cell_reconstruction(IMMERSED_BOUNDARY::stencil_values const&, double&, double&, double&, double&)
  0.17    376.11     0.66 53625600     0.00     0.00  FINITE_VOLUME::minmod(double const&, double const&, double const&)
  0.14    376.66     0.55 89376000     0.00     0.00  FINITE_VOLUME::double3::operator-(FINITE_VOLUME::double3 const&)
  0.14    377.20     0.54  8937600     0.00     0.00  FINITE_VOLUME::C_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, FINITE_VOLUME::double3&)
  0.14    377.73     0.53 134118720     0.00     0.00  cell::set_unknown(unsigned int const&, double const&)
  0.13    378.22     0.49  3743600     0.00     0.00  Eigen::internal::triangular_solve_vector<double, double, int, 1, 2, false, 0>::run(int, double const*, int, double*)
  0.12    378.70     0.48 98313600     0.00     0.00  FINITE_VOLUME::double3::operator*(double const&)
  0.12    379.18     0.48      490     0.98    29.35  FINITE_VOLUME::time_step(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&)
  0.12    379.63     0.45     2450     0.18     9.67  grid::calculate_RP_quantities()
  0.11    380.07     0.44 153945120     0.00     0.00  cell::get_unknown(unsigned int const&)
  0.11    380.49     0.42 278244858     0.00     0.00  cell::get_type() const
  0.10    380.89     0.40  7495632     0.00     0.00  ghost_cell::get_GQs() const
  0.09    381.24     0.35  2234400     0.00     0.00  unknown::operator()(unsigned int const&, unsigned int const&, unsigned int const&, unsigned int const&)
  0.08    381.56     0.32  1842400     0.00     0.00  Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>, 1, 5, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>&)
  0.08    381.87     0.31 71500800     0.00     0.00  FINITE_VOLUME::double3::double3(double const&, double const&, double const&)
  0.08    382.16     0.29 44688000     0.00     0.00  FINITE_VOLUME::double3::operator+(FINITE_VOLUME::double3 const&)
  0.07    382.44     0.28     7368     0.04     0.25  ghost_unknown::import_unknown(grid&, unsigned int const&)
  0.06    382.67     0.23 71500800     0.00     0.00  FINITE_VOLUME::triplet::triplet(FINITE_VOLUME::triplet const&)
  0.06    382.90     0.23  8937600     0.00     0.00  FINITE_VOLUME::cell_evolution(double&, double&, double&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, double const&)
  0.05    383.10     0.20  3772768     0.00     0.00  std::vector<ghost_quantities, std::allocator<ghost_quantities> >::operator=(std::vector<ghost_quantities, std::allocator<ghost_quantities> > const&)
  0.04    383.26     0.16 116188800     0.00     0.00  FINITE_VOLUME::double3::double3()
  0.04    383.41     0.15 53625600     0.00     0.00  FINITE_VOLUME::double3::operator=(FINITE_VOLUME::double3 const&)
  0.03    383.53     0.12  1842400     0.00     0.00  void Eigen::internal::solve_retval<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::Matrix<double, 8, 1, 0, 8, 1> >::evalTo<Eigen::Matrix<double, 8, 1, 0, 8, 1> >(Eigen::Matrix<double, 8, 1, 0, 8, 1>&) const
  0.03    383.64     0.11 17875200     0.00     0.00  FINITE_VOLUME::interfaces_values::interfaces_values(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&)
  0.03    383.74     0.10     2450     0.04     0.15  grid::calculate_GP_quantities()
  0.02    383.82     0.08  1901200     0.00     0.00  void Eigen::internal::solve_retval<Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >, Eigen::Matrix<double, 4, 1, 0, 4, 1> >::evalTo<Eigen::Matrix<double, 4, 1, 0, 4, 1> >(Eigen::Matrix<double, 4, 1, 0, 4, 1>&) const
  0.02    383.90     0.08       50     1.60     1.82  grid::writeout_unknowns(std::string const&)
  0.02    383.97     0.07  1901200     0.00     0.00  Eigen::internal::triangular_solve_vector<double, double, int, 1, 5, false, 0>::run(int, double const*, int, double*)
  0.02    384.03     0.06  1901200     0.00     0.00  Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>, 1, 2, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>&)
  0.01    384.08     0.05  7423164     0.00     0.00  std::vector<Point2d<double>, std::allocator<Point2d<double> > >::operator=(std::vector<Point2d<double>, std::allocator<Point2d<double> > > const&)
  0.01    384.12     0.04  5586000     0.00     0.00  ghost_cell::get_RP_unknown(unsigned int const&, unsigned int const&)
  0.01    384.16     0.04  5586000     0.00     0.00  ghost_cell::set_GP_unknown(unsigned int const&, unsigned int const&, double const&)
  0.01    384.20     0.04  5586000     0.00     0.00  ghost_cell::set_RP_unknown(unsigned int const&, unsigned int const&, double const&)
  0.01    384.24     0.04  1901200     0.00     0.00  Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>, 1, 5, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>&)
  0.01    384.27     0.03    59948     0.00     0.00  boundary::get_edge_vertex(BOUNDARY::side const&, unsigned int) const
  0.01    384.30     0.03    43211     0.00     0.00  boundary::get_n_edge(Point2d<unsigned int> const&)
  0.01    384.32     0.02  2234400     0.00     0.00  unknown::operator()(Point2d<unsigned int> const&, Point2d<unsigned int> const&)
  0.01    384.34     0.02        3     6.67   113.73  grid::set_wet2()
  0.00    384.35     0.01   328320     0.00     0.00  std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, double> const&)
  0.00    384.36     0.01   328320     0.00     0.00  std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_insert_unique(std::pair<Point2d<unsigned int> const, double> const&)
  0.00    384.37     0.01   286312     0.00     0.00  cell::get_boundary()
  0.00    384.38     0.01    40804     0.00     0.00  std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, cell> const&)
  0.00    384.39     0.01    20442     0.00     0.00  boundary::get_label(unsigned int const&)
  0.00    384.40     0.01     9068     0.00     0.00  grid::cutted_center(Point2d<unsigned int> const&)
  0.00    384.41     0.01      376     0.03     0.03  Eigen::internal::general_matrix_matrix_product<int, double, 0, false, double, 0, false, 0>::run(int, int, int, double const*, int, double const*, int, double*, int, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<int>*)
  0.00    384.42     0.01        3     3.33    61.43  grid::set_unknown_values(double (*)(Point2d<double> const&), unsigned int const&)
  0.00    384.42     0.00  5611840     0.00     0.00  ghost_cell::get_number_of_adj_wet_cells() const
  0.00    384.42     0.00  1842400     0.00     0.00  Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>, 1, 2, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>&)
  0.00    384.42     0.00   244218     0.00     0.00  cell::set_type(CELL::type const&)
  0.00    384.42     0.00   166242     0.00     0.00  cell::set_boundary(CELL::boundary const&)
  0.00    384.42     0.00   158442     0.00     0.00  cell::get_center()
  0.00    384.42     0.00   122413     0.00     0.00  cell::~cell()
  0.00    384.42     0.00   122412     0.00     0.00  cell::cell(cell const&)
  0.00    384.42     0.00    40804     0.00     0.00  cell::set_center(double const&, double const&)
  0.00    384.42     0.00    18240     0.00     0.00  INITIAL_CONDITIONS::z_init(Point2d<double> const&)
  0.00    384.42     0.00    18240     0.00     0.00  INITIAL_CONDITIONS::Qx_init(Point2d<double> const&)
  0.00    384.42     0.00    18240     0.00     0.00  INITIAL_CONDITIONS::Qy_init(Point2d<double> const&)
  0.00    384.42     0.00    15858     0.00     0.00  std::vector<double, std::allocator<double> >::at(unsigned int)
  0.00    384.42     0.00    13680     0.00     0.00  std::vector<ghost_value, std::allocator<ghost_value> >::_M_insert_aux(__gnu_cxx::__normal_iterator<ghost_value*, std::vector<ghost_value, std::allocator<ghost_value> > >, ghost_value const&)
  0.00    384.42     0.00    12897     0.00     0.00  boundary::get_N_edges()
  0.00    384.42     0.00     7350     0.00     5.43  unknown::export_unknown()
  0.00    384.42     0.00     7350     0.00     5.66  unknown::import_unknown()
  0.00    384.42     0.00     6912     0.00     0.00  std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > const&)
  0.00    384.42     0.00     6392     0.00     0.00  T.3135
  0.00    384.42     0.00     4534     0.00     0.00  grid::cutted_center_by_diagonal(Point2d<unsigned int> const&)
  0.00    384.42     0.00     4339     0.00     0.00  std::vector<ghost_quantities, std::allocator<ghost_quantities> >::~vector()
  0.00    384.42     0.00     3015     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&)
  0.00    384.42     0.00     2455     0.00     0.00  std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point2d<unsigned int>*, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > >, Point2d<unsigned int> const&)
  0.00    384.42     0.00     2450     0.00     9.67  grid::boundary_conditions()
  0.00    384.42     0.00     2278     0.00     0.00  grid::valid_edge(Point2d<unsigned int> const&, Point2d<double> const&, Point2d<double> const&, double const&, double const&, BOUNDARY::side&)
  0.00    384.42     0.00     2270     0.00     0.00  grid::set_L_adj(Point2d<unsigned int> const&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > >&)
  0.00    384.42     0.00     2268     0.00     0.00  std::vector<Point2d<double>, std::allocator<Point2d<double> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point2d<double>*, std::vector<Point2d<double>, std::allocator<Point2d<double> > > >, Point2d<double> const&)
  0.00    384.42     0.00     1960     0.00    37.44  FINITE_VOLUME::interfaces_boundary_conditions(grid&, unknown&, unknown&, unknown&)
  0.00    384.42     0.00     1906     0.00     0.00  cell::~cell()
  0.00    384.42     0.00     1880     0.00     0.00  Eigen::Matrix<double, 8, 8, 0, 8, 8>& Eigen::PlainObjectBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::_set_noalias<Eigen::Matrix<double, 8, 8, 0, 8, 8> >(Eigen::DenseBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> > const&)
  0.00    384.42     0.00     1520     0.00     0.00  cell::operator=(cell const&)
  0.00    384.42     0.00     1520     0.00     0.00  std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&)
  0.00    384.42     0.00     1516     0.00     0.00  Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::FullPivLU(Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > const&)
  0.00    384.42     0.00     1163     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00    384.42     0.00     1152     0.00     0.00  cell::cell(cell const&)
  0.00    384.42     0.00     1136     0.00     0.00  ghost_cell::operator=(ghost_cell const&)
  0.00    384.42     0.00     1136     0.00     0.00  IMMERSED_BOUNDARY::find_BP_RP_normal(Point2d<double> const&, Point2d<double> const&, Point2d<double> const&, Point2d<double>&, Point2d<double>&, Point2d<double>&)
  0.00    384.42     0.00     1128     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00    384.42     0.00      773     0.00     0.00  grid::V_position(Point2d<unsigned int> const&, Point2d<double>&)
  0.00    384.42     0.00      764     0.00     0.00  IMMERSED_BOUNDARY::relative_position(Point2d<double> const&, Point2d<double> const&, double const&, double const&)
  0.00    384.42     0.00      764     0.00     0.00  boundary::get_last_vertex()
  0.00    384.42     0.00      764     0.00     0.00  boundary::add_edge(Point2d<double> const&, Point2d<unsigned int> const&)
  0.00    384.42     0.00      760     0.00     0.00  T.3146
  0.00    384.42     0.00      760     0.00     0.00  grid::closest_vertex(Point2d<double> const&, Point2d<double> const&, Point2d<double> const&)
  0.00    384.42     0.00      760     0.00     0.00  grid::build_single_BP_quantities(Point2d<unsigned int> const&, Point2d<unsigned int> const&, ghost_quantities, std::vector<ghost_quantities, std::allocator<ghost_quantities> >&)
  0.00    384.42     0.00      760     0.00     0.00  Eigen::DenseBase<Eigen::Matrix<bool, 4, 1, 0, 4, 1> >::fill(bool const&)
  0.00    384.42     0.00      754     0.00     0.00  ghost_cell::ghost_cell()
  0.00    384.42     0.00      752     0.00     0.00  T.3147
  0.00    384.42     0.00      752     0.00     0.00  ghost_cell::~ghost_cell()
  0.00    384.42     0.00      752     0.00     0.00  Eigen::DenseBase<Eigen::Matrix<bool, 8, 1, 0, 8, 1> >::fill(bool const&)
  0.00    384.42     0.00      752     0.00     0.00  std::map<Point2d<unsigned int>, ghost_cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::operator[](Point2d<unsigned int> const&)
  0.00    384.42     0.00      490     0.00   129.30  FINITE_VOLUME::interfaces_boundary_conditions(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&)
  0.00    384.42     0.00      430     0.00     0.00  IMMERSED_BOUNDARY::int2string(int const&)
  0.00    384.42     0.00      430     0.00     0.00  char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag)
  0.00    384.42     0.00      384     0.00     0.00  ghost_cell::set_GQs(std::vector<ghost_quantities, std::allocator<ghost_quantities> > const&)
  0.00    384.42     0.00      384     0.00     0.00  grid::find_SW_label(Point2d<double> const&)
  0.00    384.42     0.00      384     0.00     0.00  grid::find_number_ghost_corners(Point2d<unsigned int> const&)
  0.00    384.42     0.00      384     0.00     0.00  std::vector<Point2d<double>, std::allocator<Point2d<double> > >::_M_fill_insert(__gnu_cxx::__normal_iterator<Point2d<double>*, std::vector<Point2d<double>, std::allocator<Point2d<double> > > >, unsigned int, Point2d<double> const&)
  0.00    384.42     0.00      384     0.00     0.00  std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, ghost_cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, ghost_cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, ghost_cell> const&)
  0.00    384.42     0.00      380     0.00     0.00  Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::compute(Eigen::Matrix<double, 4, 4, 0, 4, 4> const&)
  0.00    384.42     0.00      380     0.00     0.00  Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::FullPivLU(Eigen::Matrix<double, 4, 4, 0, 4, 4> const&)
  0.00    384.42     0.00      380     0.00     0.00  void Eigen::TriangularBase<Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, 4, -1, true, true> const, 5u> >::evalToLazy<Eigen::Matrix<double, 4, -1, 0, 4, 4> >(Eigen::MatrixBase<Eigen::Matrix<double, 4, -1, 0, 4, 4> >&) const
  0.00    384.42     0.00      380     0.00     0.00  Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::reconstructedMatrix() const
  0.00    384.42     0.00      376     0.00     0.03  T.3151
  0.00    384.42     0.00      376     0.00     0.01  grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&)
  0.00    384.42     0.00      376     0.00     0.01  grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&)
  0.00    384.42     0.00      376     0.00     0.03  Eigen::Matrix<double, 8, 8, 0, 8, 8>& Eigen::MatrixBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::lazyAssign<Eigen::GeneralProduct<Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8>, 5>, Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8> >(Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8>, 5>, Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8> > const&)
  0.00    384.42     0.00      376     0.00     0.00  Eigen::Matrix<double, 4, 4, 0, 4, 4>& Eigen::PlainObjectBase<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::_set_noalias<Eigen::Matrix<double, 4, 4, 0, 4, 4> >(Eigen::DenseBase<Eigen::Matrix<double, 4, 4, 0, 4, 4> > const&)
  0.00    384.42     0.00      376     0.00     0.00  Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::compute(Eigen::Matrix<double, 8, 8, 0, 8, 8> const&)
  0.00    384.42     0.00      376     0.00     0.00  Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::FullPivLU(Eigen::Matrix<double, 8, 8, 0, 8, 8> const&)
  0.00    384.42     0.00      376     0.00     0.00  Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::FullPivLU(Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> > const&)
  0.00    384.42     0.00      376     0.00     0.00  void Eigen::TriangularBase<Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, 8, -1, true, true> const, 5u> >::evalToLazy<Eigen::Matrix<double, 8, -1, 0, 8, 8> >(Eigen::MatrixBase<Eigen::Matrix<double, 8, -1, 0, 8, 8> >&) const
  0.00    384.42     0.00      376     0.00     0.03  Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::reconstructedMatrix() const
  0.00    384.42     0.00      376     0.00     0.00  std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > const&)
  0.00    384.42     0.00      190     0.00     0.00  ghost_quantities::ghost_quantities(ghost_quantities const&)
  0.00    384.42     0.00      150     0.00     0.00  std::string* std::__uninitialized_copy_a<std::string*, std::string*, std::string>(std::string*, std::string*, std::string*, std::allocator<std::string>&)
  0.00    384.42     0.00       75     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::_M_check_len(unsigned int, char const*) const
  0.00    384.42     0.00       75     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
  0.00    384.42     0.00       51     0.00     0.00  global constructors keyed to main
  0.00    384.42     0.00       50     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::~vector()
  0.00    384.42     0.00       32     0.00     0.00  GetPot::__get_next_token(std::istream&)
  0.00    384.42     0.00       25     0.00     0.00  GetPot::__find_variable(char const*) const
  0.00    384.42     0.00       19     0.00     0.00  grid::get_wet_cells() const
  0.00    384.42     0.00       18     0.00    26.43  wet_unknown::wet_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&))
  0.00    384.42     0.00       18     0.00     0.49  ghost_unknown::ghost_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&))
  0.00    384.42     0.00       18     0.00    26.92  unknown::unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&))
  0.00    384.42     0.00       18     0.00     0.00  grid::get_N_equations() const
  0.00    384.42     0.00       18     0.00     0.00  grid::get_ghost_cells() const
  0.00    384.42     0.00       18     0.00     0.00  std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >*)
  0.00    384.42     0.00       18     0.00     0.00  std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, double> >*)
  0.00    384.42     0.00       17     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::operator=(std::vector<std::string, std::allocator<std::string> > const&)
  0.00    384.42     0.00       17     0.00     0.00  __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > > std::__find<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&, std::random_access_iterator_tag)
  0.00    384.42     0.00       12     0.00     0.00  boundary::set_edge_vertex(BOUNDARY::side const&, Point2d<double> const&, unsigned int)
  0.00    384.42     0.00       10     0.00     0.00  boundary::remove_edge(unsigned int, BOUNDARY::side const&)
  0.00    384.42     0.00        8     0.00     0.00  std::list<std::pair<Point2d<double>, Point2d<unsigned int> >, std::allocator<std::pair<Point2d<double>, Point2d<unsigned int> > > >::erase(std::_List_iterator<std::pair<Point2d<double>, Point2d<unsigned int> > >)
  0.00    384.42     0.00        6     0.00     0.00  GetPot::variable::variable(GetPot::variable const&)
  0.00    384.42     0.00        6     0.00     0.00  std::vector<GetPot::variable, std::allocator<GetPot::variable> >::_M_insert_aux(__gnu_cxx::__normal_iterator<GetPot::variable*, std::vector<GetPot::variable, std::allocator<GetPot::variable> > >, GetPot::variable const&)
  0.00    384.42     0.00        4     0.00     0.00  IMMERSED_BOUNDARY::find_label(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, Point2d<double> const&)
  0.00    384.42     0.00        4     0.00     0.00  grid::closest_corner(Point2d<unsigned int> const&, Point2d<double> const&)
  0.00    384.42     0.00        4     0.00     0.00  grid::set_all_not_cut()
  0.00    384.42     0.00        4     0.00     0.00  grid::build_all_wet_4x4_matrix(Point2d<unsigned int> const&)
  0.00    384.42     0.00        4     0.00     0.94  grid::set_cut()
  0.00    384.42     0.00        4     0.00     0.00  grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool)
  0.00    384.42     0.00        4     0.00     0.00  std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > const&)
  0.00    384.42     0.00        3     0.00     0.00  global constructors keyed to grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&))
  0.00    384.42     0.00        3     0.00   134.60  FINITE_VOLUME::cell_unknown::cell_unknown(grid&, unsigned int const&)
  0.00    384.42     0.00        3     0.00     0.00  grid::set_all_dry()
  0.00    384.42     0.00        3     0.00    14.11  grid::move_vertices()
  0.00    384.42     0.00        3     0.00     5.40  grid::remove_invalid_edges(bool&)
  0.00    384.42     0.00        3     0.00     1.13  grid::set_area_zero_on_wet_side()
  0.00    384.42     0.00        3     0.00     0.00  GetPot::__process_section_label(std::string const&, std::vector<std::string, std::allocator<std::string> >&)
  0.00    384.42     0.00        3     0.00     0.00  std::vector<std::string, std::allocator<std::string> >::erase(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >)
  0.00    384.42     0.00        2     0.00     0.00  GetPot::__read_in_stream(std::istream&)
  0.00    384.42     0.00        2     0.00     0.00  GetPot::__parse_argument_vector(std::vector<std::string, std::allocator<std::string> > const&)
  0.00    384.42     0.00        2     0.00     0.00  GetPot::~GetPot()
  0.00    384.42     0.00        2     0.00     0.00  std::vector<ghost_quantities, std::allocator<ghost_quantities> >::_M_insert_aux(__gnu_cxx::__normal_iterator<ghost_quantities*, std::vector<ghost_quantities, std::allocator<ghost_quantities> > >, ghost_quantities const&)
  0.00    384.42     0.00        2     0.00     0.00  void std::vector<std::string, std::allocator<std::string> >::_M_range_insert<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > > >(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::forward_iterator_tag)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to set_gq(ghost_quantities&, Point2d<double> const&, Point2d<double>&, Point2d<double> const&, Point2d<unsigned int> const&, Point2d<unsigned int> const&, unsigned int const&, unsigned int const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to wet_unknown::wet_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&))
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to FINITE_VOLUME::cell_unknown::cell_unknown(grid&, unsigned int const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to FINITE_VOLUME::cell_evolution(double&, double&, double&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, double const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to FINITE_VOLUME::reconstruction(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to FINITE_VOLUME::cell_reconstruction(IMMERSED_BOUNDARY::stencil_values const&, double&, double&, double&, double&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to FINITE_VOLUME::interfaces_boundary_conditions(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to FINITE_VOLUME::C_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, FINITE_VOLUME::double3&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&))
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to FINITE_VOLUME::flux_x(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to FINITE_VOLUME::minmod(double const&, double const&, double const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to FINITE_VOLUME::x_speed(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to FINITE_VOLUME::evolution(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, unknown&, unknown&, unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to FINITE_VOLUME::time_step(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to ghost_unknown::ghost_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&))
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to IMMERSED_BOUNDARY::find_label(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, Point2d<double> const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to IMMERSED_BOUNDARY::int2string(int const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to IMMERSED_BOUNDARY::find_BP_RP_normal(Point2d<double> const&, Point2d<double> const&, Point2d<double> const&, Point2d<double>&, Point2d<double>&, Point2d<double>&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to IMMERSED_BOUNDARY::relative_position(Point2d<double> const&, Point2d<double> const&, double const&, double const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to IMMERSED_BOUNDARY::find_zero(Point2d<double> const&, Point2d<double> const&, double (* const&)(Point2d<double> const&), bool const&, double const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to INITIAL_CONDITIONS::z_init(Point2d<double> const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to cell::cell()
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::V_position(Point2d<unsigned int> const&, Point2d<double>&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::build_edge(Point2d<double> const&, Point2d<unsigned int> const&, double (* const&)(Point2d<double> const&), Point2d<double> (* const&)(Point2d<double> const&))
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::join_edges(Point2d<unsigned int> const&, Point2d<double>*&, std::map<Point2d<unsigned int>, std::pair<Point2d<double>, Point2d<double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, std::pair<Point2d<double>, Point2d<double> > > > >&, int&, std::set<Point2d<unsigned int>, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<Point2d<unsigned int> > >&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::valid_edge(Point2d<unsigned int> const&, Point2d<double> const&, Point2d<double> const&, double const&, double const&, BOUNDARY::side&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::set_BC_type(unsigned int const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::cutted_center(Point2d<unsigned int> const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::move_vertices()
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::set_wet_cells()
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::writeout_domain(bool const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::boundary_conditions()
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::remove_invalid_edges(bool&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::last_common_ctrs_part()
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::calculate_GP_quantities()
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::calculate_RP_quantities()
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::set_area_zero_on_wet_side()
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::build_interpolation_matrices()
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::set_cut()
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::set_wet2()
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::set_L_adj(Point2d<unsigned int> const&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > >&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::grid(double (* const&)(Point2d<double> const&), Point2d<double> (* const&)(Point2d<double> const&), std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&))
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::~grid()
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to ERRORS::errors::errors(int const&)
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to unknown::unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&))
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to boundary::boundary()
  0.00    384.42     0.00        1     0.00     0.00  global constructors keyed to grid::get_Nx() const
  0.00    384.42     0.00        1     0.00     0.00  FINITE_VOLUME::cell_unknown::~cell_unknown()
  0.00    384.42     0.00        1     0.00   184.28  FINITE_VOLUME::initial_conditions(grid&)
  0.00    384.42     0.00        1     0.00     0.00  cell::cell(unsigned int const&)
  0.00    384.42     0.00        1     0.00     0.00  grid::get_N_edges()
  0.00    384.42     0.00        1     0.00     0.06  grid::set_wet_cells()
  0.00    384.42     0.00        1     0.00    12.27  grid::writeout_domain(bool const&)
  0.00    384.42     0.00        1     0.00   118.38  grid::build_ghost_cells()
  0.00    384.42     0.00        1     0.00     0.00  grid::writeout_real_domain(std::vector<std::pair<Point2d<unsigned int>, Point2d<double> >, std::allocator<std::pair<Point2d<unsigned int>, Point2d<double> > > > const&)
  0.00    384.42     0.00        1     0.00   535.35  grid::last_common_ctrs_part()
  0.00    384.42     0.00        1     0.00     2.06  grid::set_wet_cutted_centers()
  0.00    384.42     0.00        1     0.00     8.01  grid::build_interpolation_matrices()
  0.00    384.42     0.00        1     0.00     0.00  grid::info()
  0.00    384.42     0.00        1     0.00   594.59  grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&))
  0.00    384.42     0.00        1     0.00     0.00  grid::~grid()
  0.00    384.42     0.00        1     0.00     0.00  Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::FullPivLU()
  0.00    384.42     0.00        1     0.00     0.00  Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::FullPivLU()
  0.00    384.42     0.00        1     0.00     0.00  boundary::boundary()
  0.00    384.42     0.00        1     0.00     0.00  grid::get_N_wet_cells() const
  0.00    384.42     0.00        1     0.00     0.00  grid::get_N_ghost_cells() const
  0.00    384.42     0.00        1     0.00     0.00  grid::get_dx() const
  0.00    384.42     0.00        1     0.00     0.00  grid::get_dy() const
  0.00    384.42     0.00        1     0.00     0.00  std::vector<unsigned int, std::allocator<unsigned int> >::_M_fill_assign(unsigned int, unsigned int const&)
  0.00    384.42     0.00        1     0.00     0.00  std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, ghost_cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, ghost_cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, ghost_cell> >*)
  0.00    384.42     0.00        1     0.00     0.00  std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, cell> >*)
  0.00    384.42     0.00        1     0.00     0.00  std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc>, std::_Select1st<std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc> >*)
  0.00    384.42     0.00        1     0.00     0.00  std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >*)
  0.00    384.42     0.00        1     0.00     0.00  std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >*)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.00% of 575.00 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00  575.00                 main [1]
                1.13  244.14     490/490         FINITE_VOLUME::evolution(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, unknown&, unknown&, unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [6]
                1.16  215.22     490/490         FINITE_VOLUME::reconstruction(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&) [7]
                0.00   63.36     490/490         FINITE_VOLUME::interfaces_boundary_conditions(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&) [12]
                0.00   18.35     490/1960        FINITE_VOLUME::interfaces_boundary_conditions(grid&, unknown&, unknown&, unknown&) [10]
                0.48   13.90     490/490         FINITE_VOLUME::time_step(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [22]
                0.00   11.09    1960/7350        unknown::import_unknown() [13]
                0.00    4.74     490/2450        grid::boundary_conditions() [19]
                0.00    0.59       1/1           grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
                0.00    0.40       3/3           FINITE_VOLUME::cell_unknown::cell_unknown(grid&, unsigned int const&) [47]
                0.00    0.18       1/1           FINITE_VOLUME::initial_conditions(grid&) [60]
                0.08    0.01      50/50          grid::writeout_unknowns(std::string const&) [66]
                0.00    0.08       3/18          unknown::unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [42]
                0.02    0.06     490/2450        grid::calculate_GP_quantities() [50]
                0.00    0.01       1/1           grid::writeout_domain(bool const&) [79]
                0.00    0.00      50/430         IMMERSED_BOUNDARY::int2string(int const&) [154]
                0.00    0.00      50/51          global constructors keyed to main [172]
                0.00    0.00      13/18          std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >*) [179]
                0.00    0.00      13/18          std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, double> >*) [180]
                0.00    0.00       1/19          grid::get_wet_cells() const [176]
                0.00    0.00       1/1           grid::get_dx() const [261]
                0.00    0.00       1/1           grid::get_dy() const [262]
                0.00    0.00       1/1           grid::info() [254]
                0.00    0.00       1/1           FINITE_VOLUME::cell_unknown::~cell_unknown() [250]
                0.00    0.00       1/2           GetPot::~GetPot() [198]
                0.00    0.00       1/1           grid::~grid() [255]
-----------------------------------------------
                0.00    0.00       3/4083765379     std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > const&) [103]
                0.00    0.00      42/4083765379     grid::set_area_zero_on_wet_side() [90]
                0.00    0.00     375/4083765379     std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > const&) [101]
                0.00    0.00     383/4083765379     std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, ghost_cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, ghost_cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, ghost_cell> const&) [100]
                0.00    0.00    4900/4083765379     grid::build_ghost_cells() [63]
                0.00    0.00    6894/4083765379     std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > const&) [97]
                0.00    0.00    7500/4083765379     std::map<Point2d<unsigned int>, ghost_cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::operator[](Point2d<unsigned int> const&) [96]
                0.00    0.00   14980/4083765379     grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00   14980/4083765379     grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
                0.00    0.00   21499/4083765379     grid::build_interpolation_matrices() [88]
                0.00    0.00   25528/4083765379     grid::build_single_BP_quantities(Point2d<unsigned int> const&, Point2d<unsigned int> const&, ghost_quantities, std::vector<ghost_quantities, std::allocator<ghost_quantities> >&) [91]
                0.00    0.00   25936/4083765379     grid::find_number_ghost_corners(Point2d<unsigned int> const&) [95]
                0.00    0.00   40803/4083765379     std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, cell> const&) [80]
                0.00    0.00   51090/4083765379     grid::set_cut() [89]
                0.00    0.00   76530/4083765379     grid::move_vertices() [69]
                0.00    0.00   88200/4083765379     ghost_unknown::ghost_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [87]
                0.01    0.00  153060/4083765379     grid::cutted_center(Point2d<unsigned int> const&) [73]
                0.01    0.00  328302/4083765379     std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, double> const&) [76]
                0.05    0.00 1068690/4083765379     grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
                0.17    0.00 3918591/4083765379     grid::set_unknown_values(double (*)(Point2d<double> const&), unsigned int const&) [59]
                0.19    0.00 4183098/4083765379     grid::set_wet2() [51]
                0.35    0.00 7833492/4083765379     std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_insert_unique(std::pair<Point2d<unsigned int> const, double> const&) [49]
                1.11    0.00 24926300/4083765379     grid::calculate_RP_quantities() [20]
                1.25    0.00 28271016/4083765379     ghost_unknown::import_unknown(grid&, unsigned int const&) [28]
                1.98    0.00 44611560/4083765379     unknown::operator()(unsigned int const&, unsigned int const&, unsigned int const&, unsigned int const&) [27]
                9.53    0.00 214816304/4083765379     grid::set_unknown_values(Point2d<unsigned int> const&, unsigned int const&, double const&) [17]
               10.02    0.00 225860672/4083765379     grid::get_unknown_value(Point2d<unsigned int> const&, unsigned int const&) [18]
               18.37    0.00 414051435/4083765379     std::map<Point2d<unsigned int>, cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::operator[](Point2d<unsigned int> const&) [21]
              150.62    0.00 3394429920/4083765379     unknown::get_stencil_value(Point2d<unsigned int> const&, unknown_position::position const&, bool const&) [3]
              178.11    0.00 4013900592/4083765379     unknown::operator()(unsigned int const&, unsigned int const&) [5]
[2]     64.7  371.79    0.00 4083765379         IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
-----------------------------------------------
               11.62  131.51 107251200/214502400     FINITE_VOLUME::triplet::triplet(unknown&, unknown&, unknown&, Point2d<unsigned int> const&, unknown_position::position const&) [9]
               11.62  131.51 107251200/214502400     unknown::get_stencil_values(Point2d<unsigned int> const&) [8]
[3]     49.8   23.25  263.03 214502400         unknown::get_stencil_value(Point2d<unsigned int> const&, unknown_position::position const&, bool const&) [3]
              150.62    0.00 3394429920/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                1.54  108.52 212268000/534021600     unknown::operator()(Point2d<unsigned int> const&) [4]
                0.02    2.33 2234400/2234400     unknown::operator()(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [26]
-----------------------------------------------
                0.19   13.71 26812800/534021600     FINITE_VOLUME::time_step(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [22]
                0.19   13.71 26812800/534021600     FINITE_VOLUME::evolution(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, unknown&, unknown&, unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [6]
                0.19   13.71 26812800/534021600     unknown::get_stencil_values(Point2d<unsigned int> const&) [8]
                0.78   54.83 107251200/534021600     FINITE_VOLUME::reconstruction(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&) [7]
                0.97   68.54 134064000/534021600     FINITE_VOLUME::triplet::triplet(unknown&, unknown&, unknown&, Point2d<unsigned int> const&) [11]
                1.54  108.52 212268000/534021600     unknown::get_stencil_value(Point2d<unsigned int> const&, unknown_position::position const&, bool const&) [3]
[4]     48.2    3.87  273.01 534021600         unknown::operator()(Point2d<unsigned int> const&) [4]
               94.90  178.11 534021600/534021600     unknown::operator()(unsigned int const&, unsigned int const&) [5]
-----------------------------------------------
               94.90  178.11 534021600/534021600     unknown::operator()(Point2d<unsigned int> const&) [4]
[5]     47.5   94.90  178.11 534021600         unknown::operator()(unsigned int const&, unsigned int const&) [5]
              178.11    0.00 4013900592/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
-----------------------------------------------
                1.13  244.14     490/490         main [1]
[6]     42.7    1.13  244.14     490         FINITE_VOLUME::evolution(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, unknown&, unknown&, unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [6]
                1.13  143.14 35750400/35750400     FINITE_VOLUME::triplet::triplet(unknown&, unknown&, unknown&, Point2d<unsigned int> const&, unknown_position::position const&) [9]
                0.84   69.51 44688000/44688000     FINITE_VOLUME::triplet::triplet(unknown&, unknown&, unknown&, Point2d<unsigned int> const&) [11]
                0.19   13.71 26812800/534021600     unknown::operator()(Point2d<unsigned int> const&) [4]
                0.00    7.99    1470/7350        unknown::export_unknown() [15]
                0.23    7.29 8937600/8937600     FINITE_VOLUME::cell_evolution(double&, double&, double&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, double const&) [23]
                0.11    0.00 17875200/17875200     FINITE_VOLUME::interfaces_values::interfaces_values(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&) [64]
-----------------------------------------------
                1.16  215.22     490/490         main [1]
[7]     37.6    1.16  215.22     490         FINITE_VOLUME::reconstruction(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&) [7]
                1.21  157.04 26812800/26812800     unknown::get_stencil_values(Point2d<unsigned int> const&) [8]
                0.78   54.83 107251200/534021600     unknown::operator()(Point2d<unsigned int> const&) [4]
                0.70    0.66 26812800/26812800     FINITE_VOLUME::cell_reconstruction(IMMERSED_BOUNDARY::stencil_values const&, double&, double&, double&, double&) [29]
-----------------------------------------------
                1.21  157.04 26812800/26812800     FINITE_VOLUME::reconstruction(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&) [7]
[8]     27.5    1.21  157.04 26812800         unknown::get_stencil_values(Point2d<unsigned int> const&) [8]
               11.62  131.51 107251200/214502400     unknown::get_stencil_value(Point2d<unsigned int> const&, unknown_position::position const&, bool const&) [3]
                0.19   13.71 26812800/534021600     unknown::operator()(Point2d<unsigned int> const&) [4]
-----------------------------------------------
                1.13  143.14 35750400/35750400     FINITE_VOLUME::evolution(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, unknown&, unknown&, unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [6]
[9]     25.1    1.13  143.14 35750400         FINITE_VOLUME::triplet::triplet(unknown&, unknown&, unknown&, Point2d<unsigned int> const&, unknown_position::position const&) [9]
               11.62  131.51 107251200/214502400     unknown::get_stencil_value(Point2d<unsigned int> const&, unknown_position::position const&, bool const&) [3]
-----------------------------------------------
                0.00   18.35     490/1960        main [1]
                0.00   55.04    1470/1960        FINITE_VOLUME::interfaces_boundary_conditions(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&) [12]
[10]    12.8    0.00   73.38    1960         FINITE_VOLUME::interfaces_boundary_conditions(grid&, unknown&, unknown&, unknown&) [10]
                0.00   31.95    5880/7350        unknown::export_unknown() [15]
                0.00   22.18    3920/7350        unknown::import_unknown() [13]
                0.00   18.95    1960/2450        grid::boundary_conditions() [19]
                0.08    0.22    1960/2450        grid::calculate_GP_quantities() [50]
-----------------------------------------------
                0.84   69.51 44688000/44688000     FINITE_VOLUME::evolution(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, unknown&, unknown&, unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [6]
[11]    12.2    0.84   69.51 44688000         FINITE_VOLUME::triplet::triplet(unknown&, unknown&, unknown&, Point2d<unsigned int> const&) [11]
                0.97   68.54 134064000/534021600     unknown::operator()(Point2d<unsigned int> const&) [4]
-----------------------------------------------
                0.00   63.36     490/490         main [1]
[12]    11.0    0.00   63.36     490         FINITE_VOLUME::interfaces_boundary_conditions(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&) [12]
                0.00   55.04    1470/1960        FINITE_VOLUME::interfaces_boundary_conditions(grid&, unknown&, unknown&, unknown&) [10]
                0.00    8.32    1470/7350        unknown::import_unknown() [13]
-----------------------------------------------
                0.00    8.32    1470/7350        FINITE_VOLUME::interfaces_boundary_conditions(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&) [12]
                0.00   11.09    1960/7350        main [1]
                0.00   22.18    3920/7350        FINITE_VOLUME::interfaces_boundary_conditions(grid&, unknown&, unknown&, unknown&) [10]
[13]     7.2    0.00   41.59    7350         unknown::import_unknown() [13]
                1.50   38.23    7350/7350        wet_unknown::import_unknown(grid&, unsigned int const&) [16]
                0.28    1.59    7350/7368        ghost_unknown::import_unknown(grid&, unsigned int const&) [28]
-----------------------------------------------
                1.41   38.52    7350/7350        unknown::export_unknown() [15]
[14]     6.9    1.41   38.52    7350         wet_unknown::export_unknown(grid&, unsigned int const&) [14]
               28.26   10.26 134064000/134064000     grid::set_unknown_values(Point2d<unsigned int> const&, unsigned int const&, double const&) [17]
-----------------------------------------------
                0.00    7.99    1470/7350        FINITE_VOLUME::evolution(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, unknown&, unknown&, unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [6]
                0.00   31.95    5880/7350        FINITE_VOLUME::interfaces_boundary_conditions(grid&, unknown&, unknown&, unknown&) [10]
[15]     6.9    0.00   39.93    7350         unknown::export_unknown() [15]
                1.41   38.52    7350/7350        wet_unknown::export_unknown(grid&, unsigned int const&) [14]
-----------------------------------------------
                1.50   38.23    7350/7350        unknown::import_unknown() [13]
[16]     6.9    1.50   38.23    7350         wet_unknown::import_unknown(grid&, unsigned int const&) [16]
               27.64   10.58 134064000/134392320     grid::get_unknown_value(Point2d<unsigned int> const&, unsigned int const&) [18]
-----------------------------------------------
               28.26   10.26 134064000/134064000     wet_unknown::export_unknown(grid&, unsigned int const&) [14]
[17]     6.7   28.26   10.26 134064000         grid::set_unknown_values(Point2d<unsigned int> const&, unsigned int const&, double const&) [17]
                9.53    0.00 214816304/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.53    0.00 134064000/134118720     cell::set_unknown(unsigned int const&, double const&) [39]
                0.20    0.00 134064000/278244858     cell::get_type() const [46]
-----------------------------------------------
                0.07    0.03  328320/134392320     wet_unknown::wet_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [44]
               27.64   10.58 134064000/134392320     wet_unknown::import_unknown(grid&, unsigned int const&) [16]
[18]     6.7   27.71   10.61 134392320         grid::get_unknown_value(Point2d<unsigned int> const&, unsigned int const&) [18]
               10.02    0.00 225860672/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.38    0.00 134392320/153945120     cell::get_unknown(unsigned int const&) [45]
                0.20    0.00 134392320/278244858     cell::get_type() const [46]
-----------------------------------------------
                0.00    4.74     490/2450        main [1]
                0.00   18.95    1960/2450        FINITE_VOLUME::interfaces_boundary_conditions(grid&, unknown&, unknown&, unknown&) [10]
[19]     4.1    0.00   23.69    2450         grid::boundary_conditions() [19]
                0.45   23.24    2450/2450        grid::calculate_RP_quantities() [20]
-----------------------------------------------
                0.45   23.24    2450/2450        grid::boundary_conditions() [19]
[20]     4.1    0.45   23.24    2450         grid::calculate_RP_quantities() [20]
                2.56   18.18 24264800/24526738     std::map<Point2d<unsigned int>, cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::operator[](Point2d<unsigned int> const&) [21]
                1.11    0.00 24926300/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.12    0.56 1842400/1842400     void Eigen::internal::solve_retval<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::Matrix<double, 8, 1, 0, 8, 1> >::evalTo<Eigen::Matrix<double, 8, 1, 0, 8, 1> >(Eigen::Matrix<double, 8, 1, 0, 8, 1>&) const [34]
                0.08    0.42 1901200/1901200     void Eigen::internal::solve_retval<Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >, Eigen::Matrix<double, 4, 1, 0, 4, 1> >::evalTo<Eigen::Matrix<double, 4, 1, 0, 4, 1> >(Eigen::Matrix<double, 4, 1, 0, 4, 1>&) const [40]
                0.05    0.01  940800/3772768     std::vector<ghost_quantities, std::allocator<ghost_quantities> >::operator=(std::vector<ghost_quantities, std::allocator<ghost_quantities> > const&) [56]
                0.05    0.00  940800/7495632     ghost_cell::get_GQs() const [48]
                0.05    0.00 16816800/153945120     cell::get_unknown(unsigned int const&) [45]
                0.04    0.00 5586000/5586000     ghost_cell::set_RP_unknown(unsigned int const&, unsigned int const&, double const&) [72]
                0.01    0.00 7448000/278244858     cell::get_type() const [46]
                0.00    0.00 2802800/5611840     ghost_cell::get_number_of_adj_wet_cells() const [117]
                0.00    0.00    2450/4339        std::vector<ghost_quantities, std::allocator<ghost_quantities> >::~vector() [130]
-----------------------------------------------
                0.00    0.00      16/24526738     grid::build_all_wet_4x4_matrix(Point2d<unsigned int> const&) [102]
                0.00    0.00    1504/24526738     grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00    1504/24526738     grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
                0.00    0.00    3040/24526738     grid::build_interpolation_matrices() [88]
                0.01    0.09  122942/24526738     grid::set_wet2() [51]
                0.01    0.10  132932/24526738     grid::build_ghost_cells() [63]
                2.56   18.18 24264800/24526738     grid::calculate_RP_quantities() [20]
[21]     3.6    2.59   18.37 24526738         std::map<Point2d<unsigned int>, cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::operator[](Point2d<unsigned int> const&) [21]
               18.37    0.00 414051435/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
-----------------------------------------------
                0.48   13.90     490/490         main [1]
[22]     2.5    0.48   13.90     490         FINITE_VOLUME::time_step(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [22]
                0.19   13.71 26812800/534021600     unknown::operator()(Point2d<unsigned int> const&) [4]
-----------------------------------------------
                0.23    7.29 8937600/8937600     FINITE_VOLUME::evolution(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, unknown&, unknown&, unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [6]
[23]     1.3    0.23    7.29 8937600         FINITE_VOLUME::cell_evolution(double&, double&, double&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, double const&) [23]
                0.54    6.74 8937600/8937600     FINITE_VOLUME::C_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, FINITE_VOLUME::double3&) [24]
                0.01    0.00 8937600/116188800     FINITE_VOLUME::double3::double3() [61]
-----------------------------------------------
                0.54    6.74 8937600/8937600     FINITE_VOLUME::cell_evolution(double&, double&, double&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, double const&) [23]
[24]     1.3    0.54    6.74 8937600         FINITE_VOLUME::C_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, FINITE_VOLUME::double3&) [24]
                0.87    5.24 35750400/35750400     FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)) [25]
                0.23    0.00 71500800/71500800     FINITE_VOLUME::triplet::triplet(FINITE_VOLUME::triplet const&) [58]
                0.13    0.00 26812800/98313600     FINITE_VOLUME::double3::operator*(double const&) [43]
                0.11    0.00 17875200/89376000     FINITE_VOLUME::double3::operator-(FINITE_VOLUME::double3 const&) [37]
                0.06    0.00 8937600/44688000     FINITE_VOLUME::double3::operator+(FINITE_VOLUME::double3 const&) [55]
                0.05    0.00 17875200/53625600     FINITE_VOLUME::double3::operator=(FINITE_VOLUME::double3 const&) [62]
                0.05    0.00 35750400/116188800     FINITE_VOLUME::double3::double3() [61]
-----------------------------------------------
                0.87    5.24 35750400/35750400     FINITE_VOLUME::C_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, FINITE_VOLUME::double3&) [24]
[25]     1.1    0.87    5.24 35750400         FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)) [25]
                1.04    0.00 35750400/35750400     FINITE_VOLUME::flux_y(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&) [30]
                0.97    0.00 35750400/35750400     FINITE_VOLUME::flux_x(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&) [31]
                0.87    0.00 17875200/17875200     FINITE_VOLUME::y_speed(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&) [32]
                0.83    0.00 17875200/17875200     FINITE_VOLUME::x_speed(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&) [33]
                0.44    0.00 71500800/89376000     FINITE_VOLUME::double3::operator-(FINITE_VOLUME::double3 const&) [37]
                0.35    0.00 71500800/98313600     FINITE_VOLUME::double3::operator*(double const&) [43]
                0.31    0.00 71500800/71500800     FINITE_VOLUME::double3::double3(double const&, double const&, double const&) [53]
                0.23    0.00 35750400/44688000     FINITE_VOLUME::double3::operator+(FINITE_VOLUME::double3 const&) [55]
                0.10    0.00 35750400/53625600     FINITE_VOLUME::double3::operator=(FINITE_VOLUME::double3 const&) [62]
                0.10    0.00 71500800/116188800     FINITE_VOLUME::double3::double3() [61]
-----------------------------------------------
                0.02    2.33 2234400/2234400     unknown::get_stencil_value(Point2d<unsigned int> const&, unknown_position::position const&, bool const&) [3]
[26]     0.4    0.02    2.33 2234400         unknown::operator()(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [26]
                0.35    1.98 2234400/2234400     unknown::operator()(unsigned int const&, unsigned int const&, unsigned int const&, unsigned int const&) [27]
-----------------------------------------------
                0.35    1.98 2234400/2234400     unknown::operator()(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [26]
[27]     0.4    0.35    1.98 2234400         unknown::operator()(unsigned int const&, unsigned int const&, unsigned int const&, unsigned int const&) [27]
                1.98    0.00 44611560/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
-----------------------------------------------
                0.00    0.00      18/7368        ghost_unknown::ghost_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [87]
                0.28    1.59    7350/7368        unknown::import_unknown() [13]
[28]     0.3    0.28    1.59    7368         ghost_unknown::import_unknown(grid&, unsigned int const&) [28]
                1.25    0.00 28271016/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.15    0.04 2829312/3772768     std::vector<ghost_quantities, std::allocator<ghost_quantities> >::operator=(std::vector<ghost_quantities, std::allocator<ghost_quantities> > const&) [56]
                0.15    0.00 2829312/7495632     ghost_cell::get_GQs() const [48]
                0.00    0.00   13680/13680       std::vector<ghost_value, std::allocator<ghost_value> >::_M_insert_aux(__gnu_cxx::__normal_iterator<ghost_value*, std::vector<ghost_value, std::allocator<ghost_value> > >, ghost_value const&) [128]
-----------------------------------------------
                0.70    0.66 26812800/26812800     FINITE_VOLUME::reconstruction(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&) [7]
[29]     0.2    0.70    0.66 26812800         FINITE_VOLUME::cell_reconstruction(IMMERSED_BOUNDARY::stencil_values const&, double&, double&, double&, double&) [29]
                0.66    0.00 53625600/53625600     FINITE_VOLUME::minmod(double const&, double const&, double const&) [35]
-----------------------------------------------
                1.04    0.00 35750400/35750400     FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)) [25]
[30]     0.2    1.04    0.00 35750400         FINITE_VOLUME::flux_y(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&) [30]
-----------------------------------------------
                0.97    0.00 35750400/35750400     FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)) [25]
[31]     0.2    0.97    0.00 35750400         FINITE_VOLUME::flux_x(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&) [31]
-----------------------------------------------
                0.87    0.00 17875200/17875200     FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)) [25]
[32]     0.2    0.87    0.00 17875200         FINITE_VOLUME::y_speed(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&) [32]
-----------------------------------------------
                0.83    0.00 17875200/17875200     FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)) [25]
[33]     0.1    0.83    0.00 17875200         FINITE_VOLUME::x_speed(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&) [33]
-----------------------------------------------
                0.12    0.56 1842400/1842400     grid::calculate_RP_quantities() [20]
[34]     0.1    0.12    0.56 1842400         void Eigen::internal::solve_retval<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::Matrix<double, 8, 1, 0, 8, 1> >::evalTo<Eigen::Matrix<double, 8, 1, 0, 8, 1> >(Eigen::Matrix<double, 8, 1, 0, 8, 1>&) const [34]
                0.32    0.00 1842400/1842400     Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>, 1, 5, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>&) [52]
                0.00    0.24 1842400/1842400     Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>, 1, 2, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>&) [57]
-----------------------------------------------
                0.66    0.00 53625600/53625600     FINITE_VOLUME::cell_reconstruction(IMMERSED_BOUNDARY::stencil_values const&, double&, double&, double&, double&) [29]
[35]     0.1    0.66    0.00 53625600         FINITE_VOLUME::minmod(double const&, double const&, double const&) [35]
-----------------------------------------------
                0.00    0.59       1/1           main [1]
[36]     0.1    0.00    0.59       1         grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
                0.00    0.54       1/1           grid::last_common_ctrs_part() [38]
                0.05    0.00 1068690/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.01    0.00   40804/40804       std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, cell> const&) [80]
                0.00    0.00   81609/122413      cell::~cell() [121]
                0.00    0.00   81608/122412      cell::cell(cell const&) [122]
                0.00    0.00   40804/40804       cell::set_center(double const&, double const&) [123]
                0.00    0.00      16/25          GetPot::__find_variable(char const*) const [175]
                0.00    0.00       5/773         grid::V_position(Point2d<unsigned int> const&, Point2d<double>&) [145]
                0.00    0.00       4/4           IMMERSED_BOUNDARY::find_label(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, Point2d<double> const&) [188]
                0.00    0.00       4/4           grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool) [191]
                0.00    0.00       2/3           global constructors keyed to grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [192]
                0.00    0.00       1/1           boundary::boundary() [258]
                0.00    0.00       1/1           cell::cell(unsigned int const&) [251]
                0.00    0.00       1/1           grid::writeout_real_domain(std::vector<std::pair<Point2d<unsigned int>, Point2d<double> >, std::allocator<std::pair<Point2d<unsigned int>, Point2d<double> > > > const&) [253]
-----------------------------------------------
                0.11    0.00 17875200/89376000     FINITE_VOLUME::C_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, FINITE_VOLUME::double3&) [24]
                0.44    0.00 71500800/89376000     FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)) [25]
[37]     0.1    0.55    0.00 89376000         FINITE_VOLUME::double3::operator-(FINITE_VOLUME::double3 const&) [37]
-----------------------------------------------
                0.00    0.54       1/1           grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
[38]     0.1    0.00    0.54       1         grid::last_common_ctrs_part() [38]
                0.02    0.32       3/3           grid::set_wet2() [51]
                0.00    0.12       1/1           grid::build_ghost_cells() [63]
                0.00    0.04       3/3           grid::move_vertices() [69]
                0.00    0.02       3/3           grid::remove_invalid_edges(bool&) [77]
                0.00    0.01       1/1           grid::build_interpolation_matrices() [88]
                0.00    0.00       4/4           grid::set_cut() [89]
                0.00    0.00       3/3           grid::set_area_zero_on_wet_side() [90]
                0.00    0.00       1/1           grid::set_wet_cutted_centers() [94]
                0.00    0.00       1/1           grid::set_wet_cells() [99]
                0.00    0.00       4/4           grid::set_all_not_cut() [190]
                0.00    0.00       3/3           grid::set_all_dry() [193]
                0.00    0.00       1/12897       boundary::get_N_edges() [129]
                0.00    0.00       1/1           std::vector<unsigned int, std::allocator<unsigned int> >::_M_fill_assign(unsigned int, unsigned int const&) [263]
-----------------------------------------------
                0.00    0.00   54720/134118720     grid::set_unknown_values(double (*)(Point2d<double> const&), unsigned int const&) [59]
                0.53    0.00 134064000/134118720     grid::set_unknown_values(Point2d<unsigned int> const&, unsigned int const&, double const&) [17]
[39]     0.1    0.53    0.00 134118720         cell::set_unknown(unsigned int const&, double const&) [39]
-----------------------------------------------
                0.08    0.42 1901200/1901200     grid::calculate_RP_quantities() [20]
[40]     0.1    0.08    0.42 1901200         void Eigen::internal::solve_retval<Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >, Eigen::Matrix<double, 4, 1, 0, 4, 1> >::evalTo<Eigen::Matrix<double, 4, 1, 0, 4, 1> >(Eigen::Matrix<double, 4, 1, 0, 4, 1>&) const [40]
                0.06    0.25 1901200/1901200     Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>, 1, 2, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>&) [54]
                0.04    0.07 1901200/1901200     Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>, 1, 5, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>&) [65]
-----------------------------------------------
                0.24    0.00 1842400/3743600     Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>, 1, 2, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>&) [57]
                0.25    0.00 1901200/3743600     Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>, 1, 2, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>&) [54]
[41]     0.1    0.49    0.00 3743600         Eigen::internal::triangular_solve_vector<double, double, int, 1, 2, false, 0>::run(int, double const*, int, double*) [41]
-----------------------------------------------
                0.00    0.08       3/18          main [1]
                0.00    0.40      15/18          FINITE_VOLUME::cell_unknown::cell_unknown(grid&, unsigned int const&) [47]
[42]     0.1    0.00    0.48      18         unknown::unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [42]
                0.00    0.48      18/18          wet_unknown::wet_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [44]
                0.00    0.01      18/18          ghost_unknown::ghost_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [87]
-----------------------------------------------
                0.13    0.00 26812800/98313600     FINITE_VOLUME::C_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, FINITE_VOLUME::double3&) [24]
                0.35    0.00 71500800/98313600     FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)) [25]
[43]     0.1    0.48    0.00 98313600         FINITE_VOLUME::double3::operator*(double const&) [43]
-----------------------------------------------
                0.00    0.48      18/18          unknown::unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [42]
[44]     0.1    0.00    0.48      18         wet_unknown::wet_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [44]
                0.01    0.37  328320/328320      std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_insert_unique(std::pair<Point2d<unsigned int> const, double> const&) [49]
                0.07    0.03  328320/134392320     grid::get_unknown_value(Point2d<unsigned int> const&, unsigned int const&) [18]
                0.00    0.00      18/19          grid::get_wet_cells() const [176]
                0.00    0.00      18/18          grid::get_N_equations() const [177]
-----------------------------------------------
                0.01    0.00 2736000/153945120     grid::writeout_unknowns(std::string const&) [66]
                0.05    0.00 16816800/153945120     grid::calculate_RP_quantities() [20]
                0.38    0.00 134392320/153945120     grid::get_unknown_value(Point2d<unsigned int> const&, unsigned int const&) [18]
[45]     0.1    0.44    0.00 153945120         cell::get_unknown(unsigned int const&) [45]
-----------------------------------------------
                0.00    0.00       2/278244858     grid::set_area_zero_on_wet_side() [90]
                0.00    0.00     756/278244858     grid::set_wet_cutted_centers() [94]
                0.00    0.00    1536/278244858     grid::find_number_ghost_corners(Point2d<unsigned int> const&) [95]
                0.00    0.00    3040/278244858     grid::build_interpolation_matrices() [88]
                0.00    0.00   40804/278244858     grid::set_wet_cells() [99]
                0.00    0.00  122412/278244858     grid::set_unknown_values(double (*)(Point2d<double> const&), unsigned int const&) [59]
                0.00    0.00  131788/278244858     grid::build_ghost_cells() [63]
                0.00    0.00 2040200/278244858     grid::writeout_unknowns(std::string const&) [66]
                0.01    0.00 7448000/278244858     grid::calculate_RP_quantities() [20]
                0.20    0.00 134064000/278244858     grid::set_unknown_values(Point2d<unsigned int> const&, unsigned int const&, double const&) [17]
                0.20    0.00 134392320/278244858     grid::get_unknown_value(Point2d<unsigned int> const&, unsigned int const&) [18]
[46]     0.1    0.42    0.00 278244858         cell::get_type() const [46]
-----------------------------------------------
                0.00    0.40       3/3           main [1]
[47]     0.1    0.00    0.40       3         FINITE_VOLUME::cell_unknown::cell_unknown(grid&, unsigned int const&) [47]
                0.00    0.40      15/18          unknown::unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [42]
-----------------------------------------------
                0.00    0.00     376/7495632     grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00     376/7495632     grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
                0.00    0.00     384/7495632     grid::writeout_domain(bool const&) [79]
                0.00    0.00     384/7495632     grid::build_interpolation_matrices() [88]
                0.05    0.00  940800/7495632     grid::calculate_RP_quantities() [20]
                0.15    0.00 2829312/7495632     ghost_unknown::import_unknown(grid&, unsigned int const&) [28]
                0.20    0.00 3724000/7495632     grid::calculate_GP_quantities() [50]
[48]     0.1    0.40    0.00 7495632         ghost_cell::get_GQs() const [48]
-----------------------------------------------
                0.01    0.37  328320/328320      wet_unknown::wet_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [44]
[49]     0.1    0.01    0.37  328320         std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_insert_unique(std::pair<Point2d<unsigned int> const, double> const&) [49]
                0.35    0.00 7833492/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.01    0.01  328320/328320      std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, double> const&) [76]
-----------------------------------------------
                0.02    0.06     490/2450        main [1]
                0.08    0.22    1960/2450        FINITE_VOLUME::interfaces_boundary_conditions(grid&, unknown&, unknown&, unknown&) [10]
[50]     0.1    0.10    0.28    2450         grid::calculate_GP_quantities() [50]
                0.20    0.00 3724000/7495632     ghost_cell::get_GQs() const [48]
                0.04    0.00 5586000/5586000     ghost_cell::get_RP_unknown(unsigned int const&, unsigned int const&) [70]
                0.04    0.00 5586000/5586000     ghost_cell::set_GP_unknown(unsigned int const&, unsigned int const&, double const&) [71]
                0.00    0.00 2802800/5611840     ghost_cell::get_number_of_adj_wet_cells() const [117]
-----------------------------------------------
                0.02    0.32       3/3           grid::last_common_ctrs_part() [38]
[51]     0.1    0.02    0.32       3         grid::set_wet2() [51]
                0.19    0.00 4183098/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.01    0.09  122942/24526738     std::map<Point2d<unsigned int>, cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::operator[](Point2d<unsigned int> const&) [21]
                0.01    0.00   19006/43211       boundary::get_n_edge(Point2d<unsigned int> const&) [75]
                0.01    0.00   17596/59948       boundary::get_edge_vertex(BOUNDARY::side const&, unsigned int) const [74]
                0.01    0.00  243612/286312      cell::get_boundary() [82]
                0.00    0.00  121806/244218      cell::set_type(CELL::type const&) [118]
                0.00    0.00    3976/158442      cell::get_center() [120]
-----------------------------------------------
                0.32    0.00 1842400/1842400     void Eigen::internal::solve_retval<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::Matrix<double, 8, 1, 0, 8, 1> >::evalTo<Eigen::Matrix<double, 8, 1, 0, 8, 1> >(Eigen::Matrix<double, 8, 1, 0, 8, 1>&) const [34]
[52]     0.1    0.32    0.00 1842400         Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>, 1, 5, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>&) [52]
-----------------------------------------------
                0.31    0.00 71500800/71500800     FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)) [25]
[53]     0.1    0.31    0.00 71500800         FINITE_VOLUME::double3::double3(double const&, double const&, double const&) [53]
-----------------------------------------------
                0.06    0.25 1901200/1901200     void Eigen::internal::solve_retval<Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >, Eigen::Matrix<double, 4, 1, 0, 4, 1> >::evalTo<Eigen::Matrix<double, 4, 1, 0, 4, 1> >(Eigen::Matrix<double, 4, 1, 0, 4, 1>&) const [40]
[54]     0.1    0.06    0.25 1901200         Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>, 1, 2, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>&) [54]
                0.25    0.00 1901200/3743600     Eigen::internal::triangular_solve_vector<double, double, int, 1, 2, false, 0>::run(int, double const*, int, double*) [41]
-----------------------------------------------
                0.06    0.00 8937600/44688000     FINITE_VOLUME::C_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, FINITE_VOLUME::double3&) [24]
                0.23    0.00 35750400/44688000     FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)) [25]
[55]     0.1    0.29    0.00 44688000         FINITE_VOLUME::double3::operator+(FINITE_VOLUME::double3 const&) [55]
-----------------------------------------------
                0.00    0.00     376/3772768     grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00     376/3772768     grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
                0.00    0.00     384/3772768     grid::build_ghost_cells() [63]
                0.00    0.00     384/3772768     grid::build_interpolation_matrices() [88]
                0.00    0.00    1136/3772768     ghost_cell::operator=(ghost_cell const&) [98]
                0.05    0.01  940800/3772768     grid::calculate_RP_quantities() [20]
                0.15    0.04 2829312/3772768     ghost_unknown::import_unknown(grid&, unsigned int const&) [28]
[56]     0.0    0.20    0.05 3772768         std::vector<ghost_quantities, std::allocator<ghost_quantities> >::operator=(std::vector<ghost_quantities, std::allocator<ghost_quantities> > const&) [56]
                0.05    0.00 7423164/7423164     std::vector<Point2d<double>, std::allocator<Point2d<double> > >::operator=(std::vector<Point2d<double>, std::allocator<Point2d<double> > > const&) [68]
-----------------------------------------------
                0.00    0.24 1842400/1842400     void Eigen::internal::solve_retval<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::Matrix<double, 8, 1, 0, 8, 1> >::evalTo<Eigen::Matrix<double, 8, 1, 0, 8, 1> >(Eigen::Matrix<double, 8, 1, 0, 8, 1>&) const [34]
[57]     0.0    0.00    0.24 1842400         Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>, 1, 2, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>&) [57]
                0.24    0.00 1842400/3743600     Eigen::internal::triangular_solve_vector<double, double, int, 1, 2, false, 0>::run(int, double const*, int, double*) [41]
-----------------------------------------------
                0.23    0.00 71500800/71500800     FINITE_VOLUME::C_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, FINITE_VOLUME::double3&) [24]
[58]     0.0    0.23    0.00 71500800         FINITE_VOLUME::triplet::triplet(FINITE_VOLUME::triplet const&) [58]
-----------------------------------------------
                0.01    0.17       3/3           FINITE_VOLUME::initial_conditions(grid&) [60]
[59]     0.0    0.01    0.17       3         grid::set_unknown_values(double (*)(Point2d<double> const&), unsigned int const&) [59]
                0.17    0.00 3918591/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.00    0.00   54720/134118720     cell::set_unknown(unsigned int const&, double const&) [39]
                0.00    0.00  122412/278244858     cell::get_type() const [46]
                0.00    0.00   54720/158442      cell::get_center() [120]
                0.00    0.00   18240/18240       INITIAL_CONDITIONS::Qy_init(Point2d<double> const&) [126]
                0.00    0.00   18240/18240       INITIAL_CONDITIONS::Qx_init(Point2d<double> const&) [125]
                0.00    0.00   18240/18240       INITIAL_CONDITIONS::z_init(Point2d<double> const&) [124]
-----------------------------------------------
                0.00    0.18       1/1           main [1]
[60]     0.0    0.00    0.18       1         FINITE_VOLUME::initial_conditions(grid&) [60]
                0.01    0.17       3/3           grid::set_unknown_values(double (*)(Point2d<double> const&), unsigned int const&) [59]
-----------------------------------------------
                0.01    0.00 8937600/116188800     FINITE_VOLUME::cell_evolution(double&, double&, double&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, double const&) [23]
                0.05    0.00 35750400/116188800     FINITE_VOLUME::C_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, FINITE_VOLUME::double3&) [24]
                0.10    0.00 71500800/116188800     FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)) [25]
[61]     0.0    0.16    0.00 116188800         FINITE_VOLUME::double3::double3() [61]
-----------------------------------------------
                0.05    0.00 17875200/53625600     FINITE_VOLUME::C_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, FINITE_VOLUME::double3&) [24]
                0.10    0.00 35750400/53625600     FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)) [25]
[62]     0.0    0.15    0.00 53625600         FINITE_VOLUME::double3::operator=(FINITE_VOLUME::double3 const&) [62]
-----------------------------------------------
                0.00    0.12       1/1           grid::last_common_ctrs_part() [38]
[63]     0.0    0.00    0.12       1         grid::build_ghost_cells() [63]
                0.01    0.10  132932/24526738     std::map<Point2d<unsigned int>, cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::operator[](Point2d<unsigned int> const&) [21]
                0.00    0.00     760/760         grid::build_single_BP_quantities(Point2d<unsigned int> const&, Point2d<unsigned int> const&, ghost_quantities, std::vector<ghost_quantities, std::allocator<ghost_quantities> >&) [91]
                0.00    0.00     376/384         grid::find_number_ghost_corners(Point2d<unsigned int> const&) [95]
                0.00    0.00     752/59948       boundary::get_edge_vertex(BOUNDARY::side const&, unsigned int) const [74]
                0.00    0.00     376/43211       boundary::get_n_edge(Point2d<unsigned int> const&) [75]
                0.00    0.00    4900/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.00    0.00  131788/278244858     cell::get_type() const [46]
                0.00    0.00    1144/286312      cell::get_boundary() [82]
                0.00    0.00     384/3772768     std::vector<ghost_quantities, std::allocator<ghost_quantities> >::operator=(std::vector<ghost_quantities, std::allocator<ghost_quantities> > const&) [56]
                0.00    0.00     384/1136        ghost_cell::operator=(ghost_cell const&) [98]
                0.00    0.00     384/384         std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, ghost_cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, ghost_cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, ghost_cell> const&) [100]
                0.00    0.00     770/1906        cell::~cell() [136]
                0.00    0.00     768/1152        cell::cell(cell const&) [142]
                0.00    0.00     384/1520        cell::operator=(cell const&) [138]
                0.00    0.00     384/384         ghost_cell::set_GQs(std::vector<ghost_quantities, std::allocator<ghost_quantities> > const&) [156]
                0.00    0.00     376/158442      cell::get_center() [120]
                0.00    0.00     376/1136        IMMERSED_BOUNDARY::find_BP_RP_normal(Point2d<double> const&, Point2d<double> const&, Point2d<double> const&, Point2d<double>&, Point2d<double>&, Point2d<double>&) [143]
                0.00    0.00     376/384         grid::find_SW_label(Point2d<double> const&) [157]
                0.00    0.00     376/384         std::vector<Point2d<double>, std::allocator<Point2d<double> > >::_M_fill_insert(__gnu_cxx::__normal_iterator<Point2d<double>*, std::vector<Point2d<double>, std::allocator<Point2d<double> > > >, unsigned int, Point2d<double> const&) [158]
                0.00    0.00     190/190         ghost_quantities::ghost_quantities(ghost_quantities const&) [168]
                0.00    0.00       3/2455        std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point2d<unsigned int>*, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > >, Point2d<unsigned int> const&) [132]
                0.00    0.00       2/754         ghost_cell::ghost_cell() [151]
-----------------------------------------------
                0.11    0.00 17875200/17875200     FINITE_VOLUME::evolution(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, unknown&, unknown&, unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [6]
[64]     0.0    0.11    0.00 17875200         FINITE_VOLUME::interfaces_values::interfaces_values(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&) [64]
-----------------------------------------------
                0.04    0.07 1901200/1901200     void Eigen::internal::solve_retval<Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >, Eigen::Matrix<double, 4, 1, 0, 4, 1> >::evalTo<Eigen::Matrix<double, 4, 1, 0, 4, 1> >(Eigen::Matrix<double, 4, 1, 0, 4, 1>&) const [40]
[65]     0.0    0.04    0.07 1901200         Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>, 1, 5, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>&) [65]
                0.07    0.00 1901200/1901200     Eigen::internal::triangular_solve_vector<double, double, int, 1, 5, false, 0>::run(int, double const*, int, double*) [67]
-----------------------------------------------
                0.08    0.01      50/50          main [1]
[66]     0.0    0.08    0.01      50         grid::writeout_unknowns(std::string const&) [66]
                0.01    0.00 2736000/153945120     cell::get_unknown(unsigned int const&) [45]
                0.00    0.00 2040200/278244858     cell::get_type() const [46]
-----------------------------------------------
                0.07    0.00 1901200/1901200     Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>, 1, 5, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>&) [65]
[67]     0.0    0.07    0.00 1901200         Eigen::internal::triangular_solve_vector<double, double, int, 1, 5, false, 0>::run(int, double const*, int, double*) [67]
-----------------------------------------------
                0.05    0.00 7423164/7423164     std::vector<ghost_quantities, std::allocator<ghost_quantities> >::operator=(std::vector<ghost_quantities, std::allocator<ghost_quantities> > const&) [56]
[68]     0.0    0.05    0.00 7423164         std::vector<Point2d<double>, std::allocator<Point2d<double> > >::operator=(std::vector<Point2d<double>, std::allocator<Point2d<double> > > const&) [68]
-----------------------------------------------
                0.00    0.04       3/3           grid::last_common_ctrs_part() [38]
[69]     0.0    0.00    0.04       3         grid::move_vertices() [69]
                0.01    0.01    4534/9068        grid::cutted_center(Point2d<unsigned int> const&) [73]
                0.00    0.02    4534/4534        grid::cutted_center_by_diagonal(Point2d<unsigned int> const&) [78]
                0.00    0.00    9068/59948       boundary::get_edge_vertex(BOUNDARY::side const&, unsigned int) const [74]
                0.00    0.00   76530/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.00    0.00    4534/20442       boundary::get_label(unsigned int const&) [83]
                0.00    0.00    4534/158442      cell::get_center() [120]
                0.00    0.00    2270/12897       boundary::get_N_edges() [129]
-----------------------------------------------
                0.04    0.00 5586000/5586000     grid::calculate_GP_quantities() [50]
[70]     0.0    0.04    0.00 5586000         ghost_cell::get_RP_unknown(unsigned int const&, unsigned int const&) [70]
-----------------------------------------------
                0.04    0.00 5586000/5586000     grid::calculate_GP_quantities() [50]
[71]     0.0    0.04    0.00 5586000         ghost_cell::set_GP_unknown(unsigned int const&, unsigned int const&, double const&) [71]
-----------------------------------------------
                0.04    0.00 5586000/5586000     grid::calculate_RP_quantities() [20]
[72]     0.0    0.04    0.00 5586000         ghost_cell::set_RP_unknown(unsigned int const&, unsigned int const&, double const&) [72]
-----------------------------------------------
                0.01    0.01    4534/9068        grid::move_vertices() [69]
                0.01    0.01    4534/9068        grid::cutted_center_by_diagonal(Point2d<unsigned int> const&) [78]
[73]     0.0    0.01    0.02    9068         grid::cutted_center(Point2d<unsigned int> const&) [73]
                0.01    0.00   18136/59948       boundary::get_edge_vertex(BOUNDARY::side const&, unsigned int) const [74]
                0.01    0.00  153060/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.01    0.00    9068/43211       boundary::get_n_edge(Point2d<unsigned int> const&) [75]
                0.00    0.00    9068/158442      cell::get_center() [120]
-----------------------------------------------
                0.00    0.00     752/59948       grid::set_wet_cutted_centers() [94]
                0.00    0.00     752/59948       grid::build_ghost_cells() [63]
                0.00    0.00    1520/59948       grid::build_single_BP_quantities(Point2d<unsigned int> const&, Point2d<unsigned int> const&, ghost_quantities, std::vector<ghost_quantities, std::allocator<ghost_quantities> >&) [91]
                0.00    0.00    3024/59948       grid::writeout_domain(bool const&) [79]
                0.00    0.00    4540/59948       grid::set_area_zero_on_wet_side() [90]
                0.00    0.00    4560/59948       grid::remove_invalid_edges(bool&) [77]
                0.00    0.00    9068/59948       grid::move_vertices() [69]
                0.01    0.00   17596/59948       grid::set_wet2() [51]
                0.01    0.00   18136/59948       grid::cutted_center(Point2d<unsigned int> const&) [73]
[74]     0.0    0.03    0.00   59948         boundary::get_edge_vertex(BOUNDARY::side const&, unsigned int) const [74]
-----------------------------------------------
                0.00    0.00     376/43211       grid::set_wet_cutted_centers() [94]
                0.00    0.00     376/43211       grid::build_ghost_cells() [63]
                0.00    0.00     760/43211       grid::build_single_BP_quantities(Point2d<unsigned int> const&, Point2d<unsigned int> const&, ghost_quantities, std::vector<ghost_quantities, std::allocator<ghost_quantities> >&) [91]
                0.01    0.00    9068/43211       grid::cutted_center(Point2d<unsigned int> const&) [73]
                0.01    0.00   13625/43211       grid::remove_invalid_edges(bool&) [77]
                0.01    0.00   19006/43211       grid::set_wet2() [51]
[75]     0.0    0.03    0.00   43211         boundary::get_n_edge(Point2d<unsigned int> const&) [75]
-----------------------------------------------
                0.01    0.01  328320/328320      std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_insert_unique(std::pair<Point2d<unsigned int> const, double> const&) [49]
[76]     0.0    0.01    0.01  328320         std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, double> const&) [76]
                0.01    0.00  328302/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
-----------------------------------------------
                0.00    0.02       3/3           grid::last_common_ctrs_part() [38]
[77]     0.0    0.00    0.02       3         grid::remove_invalid_edges(bool&) [77]
                0.01    0.00   13625/43211       boundary::get_n_edge(Point2d<unsigned int> const&) [75]
                0.00    0.00    9100/20442       boundary::get_label(unsigned int const&) [83]
                0.00    0.00    4560/59948       boundary::get_edge_vertex(BOUNDARY::side const&, unsigned int) const [74]
                0.00    0.00    9100/12897       boundary::get_N_edges() [129]
                0.00    0.00    2278/2278        grid::valid_edge(Point2d<unsigned int> const&, Point2d<double> const&, Point2d<double> const&, double const&, double const&, BOUNDARY::side&) [133]
                0.00    0.00    2270/2270        grid::set_L_adj(Point2d<unsigned int> const&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > >&) [134]
                0.00    0.00      10/10          boundary::remove_edge(unsigned int, BOUNDARY::side const&) [184]
                0.00    0.00       8/12          boundary::set_edge_vertex(BOUNDARY::side const&, Point2d<double> const&, unsigned int) [183]
                0.00    0.00       4/4           grid::closest_corner(Point2d<unsigned int> const&, Point2d<double> const&) [189]
-----------------------------------------------
                0.00    0.02    4534/4534        grid::move_vertices() [69]
[78]     0.0    0.00    0.02    4534         grid::cutted_center_by_diagonal(Point2d<unsigned int> const&) [78]
                0.01    0.01    4534/9068        grid::cutted_center(Point2d<unsigned int> const&) [73]
-----------------------------------------------
                0.00    0.01       1/1           main [1]
[79]     0.0    0.00    0.01       1         grid::writeout_domain(bool const&) [79]
                0.00    0.01     376/376         Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::reconstructedMatrix() const [86]
                0.00    0.00    3024/59948       boundary::get_edge_vertex(BOUNDARY::side const&, unsigned int) const [74]
                0.00    0.00    1512/20442       boundary::get_label(unsigned int const&) [83]
                0.00    0.00     384/7495632     ghost_cell::get_GQs() const [48]
                0.00    0.00   81608/158442      cell::get_center() [120]
                0.00    0.00    6392/6392        T.3135 [104]
                0.00    0.00    6240/5611840     ghost_cell::get_number_of_adj_wet_cells() const [117]
                0.00    0.00    1514/12897       boundary::get_N_edges() [129]
                0.00    0.00    1136/1163        std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [141]
                0.00    0.00    1128/1128        std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [144]
                0.00    0.00     380/380         Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::reconstructedMatrix() const [162]
                0.00    0.00     380/430         IMMERSED_BOUNDARY::int2string(int const&) [154]
                0.00    0.00     376/1880        Eigen::Matrix<double, 8, 8, 0, 8, 8>& Eigen::PlainObjectBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::_set_noalias<Eigen::Matrix<double, 8, 8, 0, 8, 8> >(Eigen::DenseBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> > const&) [137]
                0.00    0.00     376/376         Eigen::Matrix<double, 4, 4, 0, 4, 4>& Eigen::PlainObjectBase<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::_set_noalias<Eigen::Matrix<double, 4, 4, 0, 4, 4> >(Eigen::DenseBase<Eigen::Matrix<double, 4, 4, 0, 4, 4> > const&) [163]
-----------------------------------------------
                0.01    0.00   40804/40804       grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
[80]     0.0    0.01    0.00   40804         std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, cell> const&) [80]
                0.00    0.00   40803/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.00    0.00   40804/122412      cell::cell(cell const&) [122]
-----------------------------------------------
                0.00    0.01     376/376         Eigen::Matrix<double, 8, 8, 0, 8, 8>& Eigen::MatrixBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::lazyAssign<Eigen::GeneralProduct<Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8>, 5>, Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8> >(Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8>, 5>, Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8> > const&) [84]
[81]     0.0    0.00    0.01     376         T.3151 [81]
                0.01    0.00     376/376         Eigen::internal::general_matrix_matrix_product<int, double, 0, false, double, 0, false, 0>::run(int, int, int, double const*, int, double const*, int, double*, int, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<int>*) [85]
-----------------------------------------------
                0.00    0.00     752/286312      grid::build_single_BP_quantities(Point2d<unsigned int> const&, Point2d<unsigned int> const&, ghost_quantities, std::vector<ghost_quantities, std::allocator<ghost_quantities> >&) [91]
                0.00    0.00    1144/286312      grid::build_ghost_cells() [63]
                0.00    0.00   40804/286312      grid::set_wet_cutted_centers() [94]
                0.01    0.00  243612/286312      grid::set_wet2() [51]
[82]     0.0    0.01    0.00  286312         cell::get_boundary() [82]
-----------------------------------------------
                0.00    0.00    1512/20442       grid::writeout_domain(bool const&) [79]
                0.00    0.00    2270/20442       grid::set_area_zero_on_wet_side() [90]
                0.00    0.00    3026/20442       grid::set_cut() [89]
                0.00    0.00    4534/20442       grid::move_vertices() [69]
                0.00    0.00    9100/20442       grid::remove_invalid_edges(bool&) [77]
[83]     0.0    0.01    0.00   20442         boundary::get_label(unsigned int const&) [83]
-----------------------------------------------
                0.00    0.01     376/376         Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::reconstructedMatrix() const [86]
[84]     0.0    0.00    0.01     376         Eigen::Matrix<double, 8, 8, 0, 8, 8>& Eigen::MatrixBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::lazyAssign<Eigen::GeneralProduct<Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8>, 5>, Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8> >(Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8>, 5>, Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8> > const&) [84]
                0.00    0.01     376/376         T.3151 [81]
-----------------------------------------------
                0.01    0.00     376/376         T.3151 [81]
[85]     0.0    0.01    0.00     376         Eigen::internal::general_matrix_matrix_product<int, double, 0, false, double, 0, false, 0>::run(int, int, int, double const*, int, double const*, int, double*, int, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<int>*) [85]
-----------------------------------------------
                0.00    0.01     376/376         grid::writeout_domain(bool const&) [79]
[86]     0.0    0.00    0.01     376         Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::reconstructedMatrix() const [86]
                0.00    0.01     376/376         Eigen::Matrix<double, 8, 8, 0, 8, 8>& Eigen::MatrixBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::lazyAssign<Eigen::GeneralProduct<Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8>, 5>, Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8> >(Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8>, 5>, Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8> > const&) [84]
                0.00    0.00     752/752         T.3147 [106]
                0.00    0.00     752/752         Eigen::DenseBase<Eigen::Matrix<bool, 8, 1, 0, 8, 1> >::fill(bool const&) [153]
                0.00    0.00     376/376         void Eigen::TriangularBase<Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, 8, -1, true, true> const, 5u> >::evalToLazy<Eigen::Matrix<double, 8, -1, 0, 8, 8> >(Eigen::MatrixBase<Eigen::Matrix<double, 8, -1, 0, 8, 8> >&) const [167]
-----------------------------------------------
                0.00    0.01      18/18          unknown::unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [42]
[87]     0.0    0.00    0.01      18         ghost_unknown::ghost_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [87]
                0.00    0.00      18/7368        ghost_unknown::import_unknown(grid&, unsigned int const&) [28]
                0.00    0.00   88200/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.00    0.00    6912/6912        std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > const&) [97]
                0.00    0.00      18/18          grid::get_ghost_cells() const [178]
-----------------------------------------------
                0.00    0.01       1/1           grid::last_common_ctrs_part() [38]
[88]     0.0    0.00    0.01       1         grid::build_interpolation_matrices() [88]
                0.00    0.00    3040/24526738     std::map<Point2d<unsigned int>, cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::operator[](Point2d<unsigned int> const&) [21]
                0.00    0.00     376/376         grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
                0.00    0.00     376/376         grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00   21499/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.00    0.00     384/3772768     std::vector<ghost_quantities, std::allocator<ghost_quantities> >::operator=(std::vector<ghost_quantities, std::allocator<ghost_quantities> > const&) [56]
                0.00    0.00     384/7495632     ghost_cell::get_GQs() const [48]
                0.00    0.00     376/376         std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > const&) [101]
                0.00    0.00       4/4           grid::build_all_wet_4x4_matrix(Point2d<unsigned int> const&) [102]
                0.00    0.00    3040/278244858     cell::get_type() const [46]
                0.00    0.00       4/4           std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > const&) [103]
                0.00    0.00    1136/1516        Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::FullPivLU(Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > const&) [140]
                0.00    0.00     752/1880        Eigen::Matrix<double, 8, 8, 0, 8, 8>& Eigen::PlainObjectBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::_set_noalias<Eigen::Matrix<double, 8, 8, 0, 8, 8> >(Eigen::DenseBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> > const&) [137]
                0.00    0.00     385/4339        std::vector<ghost_quantities, std::allocator<ghost_quantities> >::~vector() [130]
                0.00    0.00     376/376         Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::FullPivLU(Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> > const&) [166]
                0.00    0.00       1/1           Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::FullPivLU() [256]
                0.00    0.00       1/1           Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::FullPivLU() [257]
-----------------------------------------------
                0.00    0.00       4/4           grid::last_common_ctrs_part() [38]
[89]     0.0    0.00    0.00       4         grid::set_cut() [89]
                0.00    0.00   51090/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.00    0.00    3026/20442       boundary::get_label(unsigned int const&) [83]
                0.00    0.00    3026/166242      cell::set_boundary(CELL::boundary const&) [119]
                0.00    0.00       4/12897       boundary::get_N_edges() [129]
-----------------------------------------------
                0.00    0.00       3/3           grid::last_common_ctrs_part() [38]
[90]     0.0    0.00    0.00       3         grid::set_area_zero_on_wet_side() [90]
                0.00    0.00    4540/59948       boundary::get_edge_vertex(BOUNDARY::side const&, unsigned int) const [74]
                0.00    0.00    2270/20442       boundary::get_label(unsigned int const&) [83]
                0.00    0.00      42/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.00    0.00       2/278244858     cell::get_type() const [46]
                0.00    0.00       3/12897       boundary::get_N_edges() [129]
-----------------------------------------------
                0.00    0.00     760/760         grid::build_ghost_cells() [63]
[91]     0.0    0.00    0.00     760         grid::build_single_BP_quantities(Point2d<unsigned int> const&, Point2d<unsigned int> const&, ghost_quantities, std::vector<ghost_quantities, std::allocator<ghost_quantities> >&) [91]
                0.00    0.00   25528/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.00    0.00    1520/59948       boundary::get_edge_vertex(BOUNDARY::side const&, unsigned int) const [74]
                0.00    0.00     760/43211       boundary::get_n_edge(Point2d<unsigned int> const&) [75]
                0.00    0.00     752/286312      cell::get_boundary() [82]
                0.00    0.00       8/384         grid::find_number_ghost_corners(Point2d<unsigned int> const&) [95]
                0.00    0.00     760/158442      cell::get_center() [120]
                0.00    0.00     760/1136        IMMERSED_BOUNDARY::find_BP_RP_normal(Point2d<double> const&, Point2d<double> const&, Point2d<double> const&, Point2d<double>&, Point2d<double>&, Point2d<double>&) [143]
                0.00    0.00     760/760         grid::closest_vertex(Point2d<double> const&, Point2d<double> const&, Point2d<double> const&) [149]
                0.00    0.00       8/384         grid::find_SW_label(Point2d<double> const&) [157]
                0.00    0.00       8/384         std::vector<Point2d<double>, std::allocator<Point2d<double> > >::_M_fill_insert(__gnu_cxx::__normal_iterator<Point2d<double>*, std::vector<Point2d<double>, std::allocator<Point2d<double> > > >, unsigned int, Point2d<double> const&) [158]
                0.00    0.00       2/2           std::vector<ghost_quantities, std::allocator<ghost_quantities> >::_M_insert_aux(__gnu_cxx::__normal_iterator<ghost_quantities*, std::vector<ghost_quantities, std::allocator<ghost_quantities> > >, ghost_quantities const&) [199]
-----------------------------------------------
                0.00    0.00     376/376         grid::build_interpolation_matrices() [88]
[92]     0.0    0.00    0.00     376         grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00    1504/24526738     std::map<Point2d<unsigned int>, cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::operator[](Point2d<unsigned int> const&) [21]
                0.00    0.00   14980/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.00    0.00     376/752         std::map<Point2d<unsigned int>, ghost_cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::operator[](Point2d<unsigned int> const&) [96]
                0.00    0.00     376/1136        ghost_cell::operator=(ghost_cell const&) [98]
                0.00    0.00     376/3772768     std::vector<ghost_quantities, std::allocator<ghost_quantities> >::operator=(std::vector<ghost_quantities, std::allocator<ghost_quantities> > const&) [56]
                0.00    0.00     376/7495632     ghost_cell::get_GQs() const [48]
                0.00    0.00    1504/158442      cell::get_center() [120]
                0.00    0.00    1504/3015        std::vector<unsigned int, std::allocator<unsigned int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&) [131]
                0.00    0.00    1128/2455        std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point2d<unsigned int>*, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > >, Point2d<unsigned int> const&) [132]
                0.00    0.00    1128/2268        std::vector<Point2d<double>, std::allocator<Point2d<double> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point2d<double>*, std::vector<Point2d<double>, std::allocator<Point2d<double> > > >, Point2d<double> const&) [135]
                0.00    0.00     752/4339        std::vector<ghost_quantities, std::allocator<ghost_quantities> >::~vector() [130]
                0.00    0.00     376/754         ghost_cell::ghost_cell() [151]
                0.00    0.00     376/380         Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::compute(Eigen::Matrix<double, 4, 4, 0, 4, 4> const&) [159]
                0.00    0.00     376/380         Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::FullPivLU(Eigen::Matrix<double, 4, 4, 0, 4, 4> const&) [160]
                0.00    0.00     376/1906        cell::~cell() [136]
                0.00    0.00     376/752         ghost_cell::~ghost_cell() [152]
-----------------------------------------------
                0.00    0.00     376/376         grid::build_interpolation_matrices() [88]
[93]     0.0    0.00    0.00     376         grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
                0.00    0.00    1504/24526738     std::map<Point2d<unsigned int>, cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::operator[](Point2d<unsigned int> const&) [21]
                0.00    0.00   14980/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.00    0.00     376/752         std::map<Point2d<unsigned int>, ghost_cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::operator[](Point2d<unsigned int> const&) [96]
                0.00    0.00     376/1136        ghost_cell::operator=(ghost_cell const&) [98]
                0.00    0.00     376/3772768     std::vector<ghost_quantities, std::allocator<ghost_quantities> >::operator=(std::vector<ghost_quantities, std::allocator<ghost_quantities> > const&) [56]
                0.00    0.00     376/7495632     ghost_cell::get_GQs() const [48]
                0.00    0.00    1504/158442      cell::get_center() [120]
                0.00    0.00    1504/3015        std::vector<unsigned int, std::allocator<unsigned int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&) [131]
                0.00    0.00    1128/2455        std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point2d<unsigned int>*, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > >, Point2d<unsigned int> const&) [132]
                0.00    0.00    1128/2268        std::vector<Point2d<double>, std::allocator<Point2d<double> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point2d<double>*, std::vector<Point2d<double>, std::allocator<Point2d<double> > > >, Point2d<double> const&) [135]
                0.00    0.00     752/4339        std::vector<ghost_quantities, std::allocator<ghost_quantities> >::~vector() [130]
                0.00    0.00     376/754         ghost_cell::ghost_cell() [151]
                0.00    0.00     376/376         Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::compute(Eigen::Matrix<double, 8, 8, 0, 8, 8> const&) [164]
                0.00    0.00     376/376         Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::FullPivLU(Eigen::Matrix<double, 8, 8, 0, 8, 8> const&) [165]
                0.00    0.00     376/1906        cell::~cell() [136]
                0.00    0.00     376/752         ghost_cell::~ghost_cell() [152]
-----------------------------------------------
                0.00    0.00       1/1           grid::last_common_ctrs_part() [38]
[94]     0.0    0.00    0.00       1         grid::set_wet_cutted_centers() [94]
                0.00    0.00   40804/286312      cell::get_boundary() [82]
                0.00    0.00     752/59948       boundary::get_edge_vertex(BOUNDARY::side const&, unsigned int) const [74]
                0.00    0.00     376/43211       boundary::get_n_edge(Point2d<unsigned int> const&) [75]
                0.00    0.00     756/278244858     cell::get_type() const [46]
                0.00    0.00     376/158442      cell::get_center() [120]
-----------------------------------------------
                0.00    0.00       8/384         grid::build_single_BP_quantities(Point2d<unsigned int> const&, Point2d<unsigned int> const&, ghost_quantities, std::vector<ghost_quantities, std::allocator<ghost_quantities> >&) [91]
                0.00    0.00     376/384         grid::build_ghost_cells() [63]
[95]     0.0    0.00    0.00     384         grid::find_number_ghost_corners(Point2d<unsigned int> const&) [95]
                0.00    0.00   25936/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.00    0.00    1536/278244858     cell::get_type() const [46]
-----------------------------------------------
                0.00    0.00     376/752         grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00     376/752         grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
[96]     0.0    0.00    0.00     752         std::map<Point2d<unsigned int>, ghost_cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::operator[](Point2d<unsigned int> const&) [96]
                0.00    0.00    7500/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
-----------------------------------------------
                0.00    0.00    6912/6912        ghost_unknown::ghost_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [87]
[97]     0.0    0.00    0.00    6912         std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > const&) [97]
                0.00    0.00    6894/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
-----------------------------------------------
                0.00    0.00     376/1136        grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00     376/1136        grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
                0.00    0.00     384/1136        grid::build_ghost_cells() [63]
[98]     0.0    0.00    0.00    1136         ghost_cell::operator=(ghost_cell const&) [98]
                0.00    0.00    1136/3772768     std::vector<ghost_quantities, std::allocator<ghost_quantities> >::operator=(std::vector<ghost_quantities, std::allocator<ghost_quantities> > const&) [56]
                0.00    0.00    1136/1520        cell::operator=(cell const&) [138]
-----------------------------------------------
                0.00    0.00       1/1           grid::last_common_ctrs_part() [38]
[99]     0.0    0.00    0.00       1         grid::set_wet_cells() [99]
                0.00    0.00   40804/278244858     cell::get_type() const [46]
                0.00    0.00      16/2455        std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point2d<unsigned int>*, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > >, Point2d<unsigned int> const&) [132]
-----------------------------------------------
                0.00    0.00     384/384         grid::build_ghost_cells() [63]
[100]    0.0    0.00    0.00     384         std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, ghost_cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, ghost_cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, ghost_cell> const&) [100]
                0.00    0.00     383/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.00    0.00     384/1152        cell::cell(cell const&) [142]
-----------------------------------------------
                0.00    0.00     376/376         grid::build_interpolation_matrices() [88]
[101]    0.0    0.00    0.00     376         std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > const&) [101]
                0.00    0.00     375/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.00    0.00     376/1880        Eigen::Matrix<double, 8, 8, 0, 8, 8>& Eigen::PlainObjectBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::_set_noalias<Eigen::Matrix<double, 8, 8, 0, 8, 8> >(Eigen::DenseBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> > const&) [137]
                0.00    0.00     376/1516        Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::FullPivLU(Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > const&) [140]
-----------------------------------------------
                0.00    0.00       4/4           grid::build_interpolation_matrices() [88]
[102]    0.0    0.00    0.00       4         grid::build_all_wet_4x4_matrix(Point2d<unsigned int> const&) [102]
                0.00    0.00      16/24526738     std::map<Point2d<unsigned int>, cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::operator[](Point2d<unsigned int> const&) [21]
                0.00    0.00      16/158442      cell::get_center() [120]
                0.00    0.00      12/2268        std::vector<Point2d<double>, std::allocator<Point2d<double> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point2d<double>*, std::vector<Point2d<double>, std::allocator<Point2d<double> > > >, Point2d<double> const&) [135]
                0.00    0.00       4/380         Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::compute(Eigen::Matrix<double, 4, 4, 0, 4, 4> const&) [159]
                0.00    0.00       4/380         Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::FullPivLU(Eigen::Matrix<double, 4, 4, 0, 4, 4> const&) [160]
-----------------------------------------------
                0.00    0.00       4/4           grid::build_interpolation_matrices() [88]
[103]    0.0    0.00    0.00       4         std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > const&) [103]
                0.00    0.00       3/4083765379     IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [2]
                0.00    0.00       4/1516        Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::FullPivLU(Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > const&) [140]
-----------------------------------------------
                0.00    0.00    6392/6392        grid::writeout_domain(bool const&) [79]
[104]    0.0    0.00    0.00    6392         T.3135 [104]
-----------------------------------------------
                0.00    0.00     760/760         Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::reconstructedMatrix() const [162]
[105]    0.0    0.00    0.00     760         T.3146 [105]
-----------------------------------------------
                0.00    0.00     752/752         Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::reconstructedMatrix() const [86]
[106]    0.0    0.00    0.00     752         T.3147 [106]
-----------------------------------------------
                0.00    0.00    6240/5611840     grid::writeout_domain(bool const&) [79]
                0.00    0.00 2802800/5611840     grid::calculate_RP_quantities() [20]
                0.00    0.00 2802800/5611840     grid::calculate_GP_quantities() [50]
[117]    0.0    0.00    0.00 5611840         ghost_cell::get_number_of_adj_wet_cells() const [117]
-----------------------------------------------
                0.00    0.00  121806/244218      grid::set_wet2() [51]
                0.00    0.00  122412/244218      grid::set_all_dry() [193]
[118]    0.0    0.00    0.00  244218         cell::set_type(CELL::type const&) [118]
-----------------------------------------------
                0.00    0.00    3026/166242      grid::set_cut() [89]
                0.00    0.00  163216/166242      grid::set_all_not_cut() [190]
[119]    0.0    0.00    0.00  166242         cell::set_boundary(CELL::boundary const&) [119]
-----------------------------------------------
                0.00    0.00      16/158442      grid::build_all_wet_4x4_matrix(Point2d<unsigned int> const&) [102]
                0.00    0.00     376/158442      grid::set_wet_cutted_centers() [94]
                0.00    0.00     376/158442      grid::build_ghost_cells() [63]
                0.00    0.00     760/158442      grid::build_single_BP_quantities(Point2d<unsigned int> const&, Point2d<unsigned int> const&, ghost_quantities, std::vector<ghost_quantities, std::allocator<ghost_quantities> >&) [91]
                0.00    0.00    1504/158442      grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00    1504/158442      grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
                0.00    0.00    3976/158442      grid::set_wet2() [51]
                0.00    0.00    4534/158442      grid::move_vertices() [69]
                0.00    0.00    9068/158442      grid::cutted_center(Point2d<unsigned int> const&) [73]
                0.00    0.00   54720/158442      grid::set_unknown_values(double (*)(Point2d<double> const&), unsigned int const&) [59]
                0.00    0.00   81608/158442      grid::writeout_domain(bool const&) [79]
[120]    0.0    0.00    0.00  158442         cell::get_center() [120]
-----------------------------------------------
                0.00    0.00   40804/122413      std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, cell> >*) [265]
                0.00    0.00   81609/122413      grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
[121]    0.0    0.00    0.00  122413         cell::~cell() [121]
-----------------------------------------------
                0.00    0.00   40804/122412      std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, cell> const&) [80]
                0.00    0.00   81608/122412      grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
[122]    0.0    0.00    0.00  122412         cell::cell(cell const&) [122]
-----------------------------------------------
                0.00    0.00   40804/40804       grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
[123]    0.0    0.00    0.00   40804         cell::set_center(double const&, double const&) [123]
-----------------------------------------------
                0.00    0.00   18240/18240       grid::set_unknown_values(double (*)(Point2d<double> const&), unsigned int const&) [59]
[124]    0.0    0.00    0.00   18240         INITIAL_CONDITIONS::z_init(Point2d<double> const&) [124]
-----------------------------------------------
                0.00    0.00   18240/18240       grid::set_unknown_values(double (*)(Point2d<double> const&), unsigned int const&) [59]
[125]    0.0    0.00    0.00   18240         INITIAL_CONDITIONS::Qx_init(Point2d<double> const&) [125]
-----------------------------------------------
                0.00    0.00   18240/18240       grid::set_unknown_values(double (*)(Point2d<double> const&), unsigned int const&) [59]
[126]    0.0    0.00    0.00   18240         INITIAL_CONDITIONS::Qy_init(Point2d<double> const&) [126]
-----------------------------------------------
                0.00    0.00    2286/15858       grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool) [191]
                0.00    0.00   13572/15858       grid::valid_edge(Point2d<unsigned int> const&, Point2d<double> const&, Point2d<double> const&, double const&, double const&, BOUNDARY::side&) [133]
[127]    0.0    0.00    0.00   15858         std::vector<double, std::allocator<double> >::at(unsigned int) [127]
-----------------------------------------------
                0.00    0.00   13680/13680       ghost_unknown::import_unknown(grid&, unsigned int const&) [28]
[128]    0.0    0.00    0.00   13680         std::vector<ghost_value, std::allocator<ghost_value> >::_M_insert_aux(__gnu_cxx::__normal_iterator<ghost_value*, std::vector<ghost_value, std::allocator<ghost_value> > >, ghost_value const&) [128]
-----------------------------------------------
                0.00    0.00       1/12897       grid::info() [254]
                0.00    0.00       1/12897       grid::last_common_ctrs_part() [38]
                0.00    0.00       3/12897       grid::set_area_zero_on_wet_side() [90]
                0.00    0.00       4/12897       grid::set_cut() [89]
                0.00    0.00       4/12897       grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool) [191]
                0.00    0.00    1514/12897       grid::writeout_domain(bool const&) [79]
                0.00    0.00    2270/12897       grid::move_vertices() [69]
                0.00    0.00    9100/12897       grid::remove_invalid_edges(bool&) [77]
[129]    0.0    0.00    0.00   12897         boundary::get_N_edges() [129]
-----------------------------------------------
                0.00    0.00     385/4339        grid::build_interpolation_matrices() [88]
                0.00    0.00     752/4339        grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00     752/4339        grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
                0.00    0.00    2450/4339        grid::calculate_RP_quantities() [20]
[130]    0.0    0.00    0.00    4339         std::vector<ghost_quantities, std::allocator<ghost_quantities> >::~vector() [130]
-----------------------------------------------
                0.00    0.00       7/3015        GetPot::__parse_argument_vector(std::vector<std::string, std::allocator<std::string> > const&) [197]
                0.00    0.00    1504/3015        grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00    1504/3015        grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
[131]    0.0    0.00    0.00    3015         std::vector<unsigned int, std::allocator<unsigned int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&) [131]
-----------------------------------------------
                0.00    0.00       3/2455        grid::build_ghost_cells() [63]
                0.00    0.00      16/2455        grid::set_wet_cells() [99]
                0.00    0.00     180/2455        grid::get_ghost_cells() const [178]
                0.00    0.00    1128/2455        grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00    1128/2455        grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
[132]    0.0    0.00    0.00    2455         std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point2d<unsigned int>*, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > >, Point2d<unsigned int> const&) [132]
-----------------------------------------------
                0.00    0.00    2278/2278        grid::remove_invalid_edges(bool&) [77]
[133]    0.0    0.00    0.00    2278         grid::valid_edge(Point2d<unsigned int> const&, Point2d<double> const&, Point2d<double> const&, double const&, double const&, BOUNDARY::side&) [133]
                0.00    0.00   13572/15858       std::vector<double, std::allocator<double> >::at(unsigned int) [127]
-----------------------------------------------
                0.00    0.00    2270/2270        grid::remove_invalid_edges(bool&) [77]
[134]    0.0    0.00    0.00    2270         grid::set_L_adj(Point2d<unsigned int> const&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > >&) [134]
-----------------------------------------------
                0.00    0.00      12/2268        grid::build_all_wet_4x4_matrix(Point2d<unsigned int> const&) [102]
                0.00    0.00    1128/2268        grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00    1128/2268        grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
[135]    0.0    0.00    0.00    2268         std::vector<Point2d<double>, std::allocator<Point2d<double> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point2d<double>*, std::vector<Point2d<double>, std::allocator<Point2d<double> > > >, Point2d<double> const&) [135]
-----------------------------------------------
                0.00    0.00     376/1906        grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00     376/1906        grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
                0.00    0.00     384/1906        std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, ghost_cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, ghost_cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, ghost_cell> >*) [264]
                0.00    0.00     770/1906        grid::build_ghost_cells() [63]
[136]    0.0    0.00    0.00    1906         cell::~cell() [136]
-----------------------------------------------
                0.00    0.00     376/1880        grid::writeout_domain(bool const&) [79]
                0.00    0.00     376/1880        Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::FullPivLU(Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> > const&) [166]
                0.00    0.00     376/1880        std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > const&) [101]
                0.00    0.00     752/1880        grid::build_interpolation_matrices() [88]
[137]    0.0    0.00    0.00    1880         Eigen::Matrix<double, 8, 8, 0, 8, 8>& Eigen::PlainObjectBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::_set_noalias<Eigen::Matrix<double, 8, 8, 0, 8, 8> >(Eigen::DenseBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> > const&) [137]
-----------------------------------------------
                0.00    0.00     384/1520        grid::build_ghost_cells() [63]
                0.00    0.00    1136/1520        ghost_cell::operator=(ghost_cell const&) [98]
[138]    0.0    0.00    0.00    1520         cell::operator=(cell const&) [138]
                0.00    0.00    1520/1520        std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [139]
-----------------------------------------------
                0.00    0.00    1520/1520        cell::operator=(cell const&) [138]
[139]    0.0    0.00    0.00    1520         std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&) [139]
-----------------------------------------------
                0.00    0.00       4/1516        std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > const&) [103]
                0.00    0.00     376/1516        std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > const&) [101]
                0.00    0.00    1136/1516        grid::build_interpolation_matrices() [88]
[140]    0.0    0.00    0.00    1516         Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::FullPivLU(Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > const&) [140]
-----------------------------------------------
                0.00    0.00       9/1163        GetPot::__parse_argument_vector(std::vector<std::string, std::allocator<std::string> > const&) [197]
                0.00    0.00      18/1163        GetPot::__read_in_stream(std::istream&) [196]
                0.00    0.00    1136/1163        grid::writeout_domain(bool const&) [79]
[141]    0.0    0.00    0.00    1163         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [141]
-----------------------------------------------
                0.00    0.00     384/1152        std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, ghost_cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, ghost_cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, ghost_cell> const&) [100]
                0.00    0.00     768/1152        grid::build_ghost_cells() [63]
[142]    0.0    0.00    0.00    1152         cell::cell(cell const&) [142]
-----------------------------------------------
                0.00    0.00     376/1136        grid::build_ghost_cells() [63]
                0.00    0.00     760/1136        grid::build_single_BP_quantities(Point2d<unsigned int> const&, Point2d<unsigned int> const&, ghost_quantities, std::vector<ghost_quantities, std::allocator<ghost_quantities> >&) [91]
[143]    0.0    0.00    0.00    1136         IMMERSED_BOUNDARY::find_BP_RP_normal(Point2d<double> const&, Point2d<double> const&, Point2d<double> const&, Point2d<double>&, Point2d<double>&, Point2d<double>&) [143]
-----------------------------------------------
                0.00    0.00    1128/1128        grid::writeout_domain(bool const&) [79]
[144]    0.0    0.00    0.00    1128         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [144]
-----------------------------------------------
                0.00    0.00       5/773         grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
                0.00    0.00     768/773         grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool) [191]
[145]    0.0    0.00    0.00     773         grid::V_position(Point2d<unsigned int> const&, Point2d<double>&) [145]
-----------------------------------------------
                0.00    0.00     764/764         grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool) [191]
[146]    0.0    0.00    0.00     764         IMMERSED_BOUNDARY::relative_position(Point2d<double> const&, Point2d<double> const&, double const&, double const&) [146]
-----------------------------------------------
                0.00    0.00     764/764         grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool) [191]
[147]    0.0    0.00    0.00     764         boundary::get_last_vertex() [147]
-----------------------------------------------
                0.00    0.00     764/764         grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool) [191]
[148]    0.0    0.00    0.00     764         boundary::add_edge(Point2d<double> const&, Point2d<unsigned int> const&) [148]
-----------------------------------------------
                0.00    0.00     760/760         grid::build_single_BP_quantities(Point2d<unsigned int> const&, Point2d<unsigned int> const&, ghost_quantities, std::vector<ghost_quantities, std::allocator<ghost_quantities> >&) [91]
[149]    0.0    0.00    0.00     760         grid::closest_vertex(Point2d<double> const&, Point2d<double> const&, Point2d<double> const&) [149]
-----------------------------------------------
                0.00    0.00     760/760         Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::reconstructedMatrix() const [162]
[150]    0.0    0.00    0.00     760         Eigen::DenseBase<Eigen::Matrix<bool, 4, 1, 0, 4, 1> >::fill(bool const&) [150]
-----------------------------------------------
                0.00    0.00       2/754         grid::build_ghost_cells() [63]
                0.00    0.00     376/754         grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00     376/754         grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
[151]    0.0    0.00    0.00     754         ghost_cell::ghost_cell() [151]
-----------------------------------------------
                0.00    0.00     376/752         grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
                0.00    0.00     376/752         grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
[152]    0.0    0.00    0.00     752         ghost_cell::~ghost_cell() [152]
-----------------------------------------------
                0.00    0.00     752/752         Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::reconstructedMatrix() const [86]
[153]    0.0    0.00    0.00     752         Eigen::DenseBase<Eigen::Matrix<bool, 8, 1, 0, 8, 1> >::fill(bool const&) [153]
-----------------------------------------------
                0.00    0.00      50/430         main [1]
                0.00    0.00     380/430         grid::writeout_domain(bool const&) [79]
[154]    0.0    0.00    0.00     430         IMMERSED_BOUNDARY::int2string(int const&) [154]
                0.00    0.00     430/430         char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [155]
-----------------------------------------------
                0.00    0.00     430/430         IMMERSED_BOUNDARY::int2string(int const&) [154]
[155]    0.0    0.00    0.00     430         char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [155]
-----------------------------------------------
                0.00    0.00     384/384         grid::build_ghost_cells() [63]
[156]    0.0    0.00    0.00     384         ghost_cell::set_GQs(std::vector<ghost_quantities, std::allocator<ghost_quantities> > const&) [156]
-----------------------------------------------
                0.00    0.00       8/384         grid::build_single_BP_quantities(Point2d<unsigned int> const&, Point2d<unsigned int> const&, ghost_quantities, std::vector<ghost_quantities, std::allocator<ghost_quantities> >&) [91]
                0.00    0.00     376/384         grid::build_ghost_cells() [63]
[157]    0.0    0.00    0.00     384         grid::find_SW_label(Point2d<double> const&) [157]
-----------------------------------------------
                0.00    0.00       8/384         grid::build_single_BP_quantities(Point2d<unsigned int> const&, Point2d<unsigned int> const&, ghost_quantities, std::vector<ghost_quantities, std::allocator<ghost_quantities> >&) [91]
                0.00    0.00     376/384         grid::build_ghost_cells() [63]
[158]    0.0    0.00    0.00     384         std::vector<Point2d<double>, std::allocator<Point2d<double> > >::_M_fill_insert(__gnu_cxx::__normal_iterator<Point2d<double>*, std::vector<Point2d<double>, std::allocator<Point2d<double> > > >, unsigned int, Point2d<double> const&) [158]
-----------------------------------------------
                0.00    0.00       4/380         grid::build_all_wet_4x4_matrix(Point2d<unsigned int> const&) [102]
                0.00    0.00     376/380         grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
[159]    0.0    0.00    0.00     380         Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::compute(Eigen::Matrix<double, 4, 4, 0, 4, 4> const&) [159]
-----------------------------------------------
                0.00    0.00       4/380         grid::build_all_wet_4x4_matrix(Point2d<unsigned int> const&) [102]
                0.00    0.00     376/380         grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [92]
[160]    0.0    0.00    0.00     380         Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::FullPivLU(Eigen::Matrix<double, 4, 4, 0, 4, 4> const&) [160]
-----------------------------------------------
                0.00    0.00     380/380         Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::reconstructedMatrix() const [162]
[161]    0.0    0.00    0.00     380         void Eigen::TriangularBase<Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, 4, -1, true, true> const, 5u> >::evalToLazy<Eigen::Matrix<double, 4, -1, 0, 4, 4> >(Eigen::MatrixBase<Eigen::Matrix<double, 4, -1, 0, 4, 4> >&) const [161]
-----------------------------------------------
                0.00    0.00     380/380         grid::writeout_domain(bool const&) [79]
[162]    0.0    0.00    0.00     380         Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::reconstructedMatrix() const [162]
                0.00    0.00     760/760         T.3146 [105]
                0.00    0.00     760/760         Eigen::DenseBase<Eigen::Matrix<bool, 4, 1, 0, 4, 1> >::fill(bool const&) [150]
                0.00    0.00     380/380         void Eigen::TriangularBase<Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, 4, -1, true, true> const, 5u> >::evalToLazy<Eigen::Matrix<double, 4, -1, 0, 4, 4> >(Eigen::MatrixBase<Eigen::Matrix<double, 4, -1, 0, 4, 4> >&) const [161]
-----------------------------------------------
                0.00    0.00     376/376         grid::writeout_domain(bool const&) [79]
[163]    0.0    0.00    0.00     376         Eigen::Matrix<double, 4, 4, 0, 4, 4>& Eigen::PlainObjectBase<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::_set_noalias<Eigen::Matrix<double, 4, 4, 0, 4, 4> >(Eigen::DenseBase<Eigen::Matrix<double, 4, 4, 0, 4, 4> > const&) [163]
-----------------------------------------------
                0.00    0.00     376/376         grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
[164]    0.0    0.00    0.00     376         Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::compute(Eigen::Matrix<double, 8, 8, 0, 8, 8> const&) [164]
-----------------------------------------------
                0.00    0.00     376/376         grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [93]
[165]    0.0    0.00    0.00     376         Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::FullPivLU(Eigen::Matrix<double, 8, 8, 0, 8, 8> const&) [165]
-----------------------------------------------
                0.00    0.00     376/376         grid::build_interpolation_matrices() [88]
[166]    0.0    0.00    0.00     376         Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::FullPivLU(Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> > const&) [166]
                0.00    0.00     376/1880        Eigen::Matrix<double, 8, 8, 0, 8, 8>& Eigen::PlainObjectBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::_set_noalias<Eigen::Matrix<double, 8, 8, 0, 8, 8> >(Eigen::DenseBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> > const&) [137]
-----------------------------------------------
                0.00    0.00     376/376         Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::reconstructedMatrix() const [86]
[167]    0.0    0.00    0.00     376         void Eigen::TriangularBase<Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, 8, -1, true, true> const, 5u> >::evalToLazy<Eigen::Matrix<double, 8, -1, 0, 8, 8> >(Eigen::MatrixBase<Eigen::Matrix<double, 8, -1, 0, 8, 8> >&) const [167]
-----------------------------------------------
                0.00    0.00     190/190         grid::build_ghost_cells() [63]
[168]    0.0    0.00    0.00     190         ghost_quantities::ghost_quantities(ghost_quantities const&) [168]
-----------------------------------------------
                0.00    0.00     150/150         std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [171]
[169]    0.0    0.00    0.00     150         std::string* std::__uninitialized_copy_a<std::string*, std::string*, std::string>(std::string*, std::string*, std::string*, std::allocator<std::string>&) [169]
-----------------------------------------------
                0.00    0.00      75/75          std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [171]
[170]    0.0    0.00    0.00      75         std::vector<std::string, std::allocator<std::string> >::_M_check_len(unsigned int, char const*) const [170]
-----------------------------------------------
                0.00    0.00       1/75          GetPot::__process_section_label(std::string const&, std::vector<std::string, std::allocator<std::string> >&) [194]
                0.00    0.00       2/75          global constructors keyed to grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [192]
                0.00    0.00      17/75          GetPot::__read_in_stream(std::istream&) [196]
                0.00    0.00      26/75          GetPot::__find_variable(char const*) const [175]
                0.00    0.00      29/75          GetPot::__parse_argument_vector(std::vector<std::string, std::allocator<std::string> > const&) [197]
[171]    0.0    0.00    0.00      75         std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [171]
                0.00    0.00     150/150         std::string* std::__uninitialized_copy_a<std::string*, std::string*, std::string>(std::string*, std::string*, std::string*, std::allocator<std::string>&) [169]
                0.00    0.00      75/75          std::vector<std::string, std::allocator<std::string> >::_M_check_len(unsigned int, char const*) const [170]
-----------------------------------------------
                0.00    0.00       1/51          __do_global_ctors_aux [417]
                0.00    0.00      50/51          main [1]
[172]    0.0    0.00    0.00      51         global constructors keyed to main [172]
-----------------------------------------------
                0.00    0.00       2/50          GetPot::__read_in_stream(std::istream&) [196]
                0.00    0.00       4/50          global constructors keyed to grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [192]
                0.00    0.00       8/50          std::vector<GetPot::variable, std::allocator<GetPot::variable> >::_M_insert_aux(__gnu_cxx::__normal_iterator<GetPot::variable*, std::vector<GetPot::variable, std::allocator<GetPot::variable> > >, GetPot::variable const&) [187]
                0.00    0.00      11/50          GetPot::__parse_argument_vector(std::vector<std::string, std::allocator<std::string> > const&) [197]
                0.00    0.00      25/50          GetPot::__find_variable(char const*) const [175]
[173]    0.0    0.00    0.00      50         std::vector<std::string, std::allocator<std::string> >::~vector() [173]
-----------------------------------------------
                0.00    0.00      32/32          GetPot::__read_in_stream(std::istream&) [196]
[174]    0.0    0.00    0.00      32         GetPot::__get_next_token(std::istream&) [174]
-----------------------------------------------
                0.00    0.00       9/25          GetPot::__parse_argument_vector(std::vector<std::string, std::allocator<std::string> > const&) [197]
                0.00    0.00      16/25          grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
[175]    0.0    0.00    0.00      25         GetPot::__find_variable(char const*) const [175]
                0.00    0.00      26/75          std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [171]
                0.00    0.00      25/50          std::vector<std::string, std::allocator<std::string> >::~vector() [173]
                0.00    0.00      14/17          __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > > std::__find<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&, std::random_access_iterator_tag) [182]
-----------------------------------------------
                0.00    0.00       1/19          main [1]
                0.00    0.00      18/19          wet_unknown::wet_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [44]
[176]    0.0    0.00    0.00      19         grid::get_wet_cells() const [176]
-----------------------------------------------
                0.00    0.00      18/18          wet_unknown::wet_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [44]
[177]    0.0    0.00    0.00      18         grid::get_N_equations() const [177]
-----------------------------------------------
                0.00    0.00      18/18          ghost_unknown::ghost_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [87]
[178]    0.0    0.00    0.00      18         grid::get_ghost_cells() const [178]
                0.00    0.00     180/2455        std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point2d<unsigned int>*, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > >, Point2d<unsigned int> const&) [132]
-----------------------------------------------
                                6912             std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >*) [179]
                0.00    0.00       5/18          FINITE_VOLUME::cell_unknown::~cell_unknown() [250]
                0.00    0.00      13/18          main [1]
[179]    0.0    0.00    0.00      18+6912    std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >*) [179]
                                6912             std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >*) [179]
-----------------------------------------------
                              328320             std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, double> >*) [180]
                0.00    0.00       5/18          FINITE_VOLUME::cell_unknown::~cell_unknown() [250]
                0.00    0.00      13/18          main [1]
[180]    0.0    0.00    0.00      18+328320  std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, double> >*) [180]
                              328320             std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, double> >*) [180]
-----------------------------------------------
                0.00    0.00       3/17          GetPot::__parse_argument_vector(std::vector<std::string, std::allocator<std::string> > const&) [197]
                0.00    0.00       6/17          GetPot::variable::variable(GetPot::variable const&) [186]
                0.00    0.00       8/17          std::vector<GetPot::variable, std::allocator<GetPot::variable> >::_M_insert_aux(__gnu_cxx::__normal_iterator<GetPot::variable*, std::vector<GetPot::variable, std::allocator<GetPot::variable> > >, GetPot::variable const&) [187]
[181]    0.0    0.00    0.00      17         std::vector<std::string, std::allocator<std::string> >::operator=(std::vector<std::string, std::allocator<std::string> > const&) [181]
-----------------------------------------------
                0.00    0.00       3/17          GetPot::__parse_argument_vector(std::vector<std::string, std::allocator<std::string> > const&) [197]
                0.00    0.00      14/17          GetPot::__find_variable(char const*) const [175]
[182]    0.0    0.00    0.00      17         __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > > std::__find<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&, std::random_access_iterator_tag) [182]
-----------------------------------------------
                0.00    0.00       4/12          grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool) [191]
                0.00    0.00       8/12          grid::remove_invalid_edges(bool&) [77]
[183]    0.0    0.00    0.00      12         boundary::set_edge_vertex(BOUNDARY::side const&, Point2d<double> const&, unsigned int) [183]
-----------------------------------------------
                0.00    0.00      10/10          grid::remove_invalid_edges(bool&) [77]
[184]    0.0    0.00    0.00      10         boundary::remove_edge(unsigned int, BOUNDARY::side const&) [184]
                0.00    0.00       8/8           std::list<std::pair<Point2d<double>, Point2d<unsigned int> >, std::allocator<std::pair<Point2d<double>, Point2d<unsigned int> > > >::erase(std::_List_iterator<std::pair<Point2d<double>, Point2d<unsigned int> > >) [185]
-----------------------------------------------
                0.00    0.00       8/8           boundary::remove_edge(unsigned int, BOUNDARY::side const&) [184]
[185]    0.0    0.00    0.00       8         std::list<std::pair<Point2d<double>, Point2d<unsigned int> >, std::allocator<std::pair<Point2d<double>, Point2d<unsigned int> > > >::erase(std::_List_iterator<std::pair<Point2d<double>, Point2d<unsigned int> > >) [185]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<GetPot::variable, std::allocator<GetPot::variable> >::_M_insert_aux(__gnu_cxx::__normal_iterator<GetPot::variable*, std::vector<GetPot::variable, std::allocator<GetPot::variable> > >, GetPot::variable const&) [187]
[186]    0.0    0.00    0.00       6         GetPot::variable::variable(GetPot::variable const&) [186]
                0.00    0.00       6/17          std::vector<std::string, std::allocator<std::string> >::operator=(std::vector<std::string, std::allocator<std::string> > const&) [181]
-----------------------------------------------
                0.00    0.00       6/6           GetPot::__parse_argument_vector(std::vector<std::string, std::allocator<std::string> > const&) [197]
[187]    0.0    0.00    0.00       6         std::vector<GetPot::variable, std::allocator<GetPot::variable> >::_M_insert_aux(__gnu_cxx::__normal_iterator<GetPot::variable*, std::vector<GetPot::variable, std::allocator<GetPot::variable> > >, GetPot::variable const&) [187]
                0.00    0.00       8/17          std::vector<std::string, std::allocator<std::string> >::operator=(std::vector<std::string, std::allocator<std::string> > const&) [181]
                0.00    0.00       8/50          std::vector<std::string, std::allocator<std::string> >::~vector() [173]
                0.00    0.00       6/6           GetPot::variable::variable(GetPot::variable const&) [186]
-----------------------------------------------
                0.00    0.00       4/4           grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
[188]    0.0    0.00    0.00       4         IMMERSED_BOUNDARY::find_label(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, Point2d<double> const&) [188]
-----------------------------------------------
                0.00    0.00       4/4           grid::remove_invalid_edges(bool&) [77]
[189]    0.0    0.00    0.00       4         grid::closest_corner(Point2d<unsigned int> const&, Point2d<double> const&) [189]
-----------------------------------------------
                0.00    0.00       4/4           grid::last_common_ctrs_part() [38]
[190]    0.0    0.00    0.00       4         grid::set_all_not_cut() [190]
                0.00    0.00  163216/166242      cell::set_boundary(CELL::boundary const&) [119]
-----------------------------------------------
                                 764             grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool) [191]
                0.00    0.00       4/4           grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
[191]    0.0    0.00    0.00       4+764     grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool) [191]
                0.00    0.00    2286/15858       std::vector<double, std::allocator<double> >::at(unsigned int) [127]
                0.00    0.00     768/773         grid::V_position(Point2d<unsigned int> const&, Point2d<double>&) [145]
                0.00    0.00     764/764         IMMERSED_BOUNDARY::relative_position(Point2d<double> const&, Point2d<double> const&, double const&, double const&) [146]
                0.00    0.00     764/764         boundary::get_last_vertex() [147]
                0.00    0.00     764/764         boundary::add_edge(Point2d<double> const&, Point2d<unsigned int> const&) [148]
                0.00    0.00       4/12897       boundary::get_N_edges() [129]
                0.00    0.00       4/12          boundary::set_edge_vertex(BOUNDARY::side const&, Point2d<double> const&, unsigned int) [183]
                                 764             grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool) [191]
-----------------------------------------------
                0.00    0.00       1/3           __do_global_ctors_aux [417]
                0.00    0.00       2/3           grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
[192]    0.0    0.00    0.00       3         global constructors keyed to grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [192]
                0.00    0.00       4/50          std::vector<std::string, std::allocator<std::string> >::~vector() [173]
                0.00    0.00       2/2           void std::vector<std::string, std::allocator<std::string> >::_M_range_insert<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > > >(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::forward_iterator_tag) [200]
                0.00    0.00       2/2           GetPot::__parse_argument_vector(std::vector<std::string, std::allocator<std::string> > const&) [197]
                0.00    0.00       2/2           GetPot::__read_in_stream(std::istream&) [196]
                0.00    0.00       2/75          std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [171]
-----------------------------------------------
                0.00    0.00       3/3           grid::last_common_ctrs_part() [38]
[193]    0.0    0.00    0.00       3         grid::set_all_dry() [193]
                0.00    0.00  122412/244218      cell::set_type(CELL::type const&) [118]
-----------------------------------------------
                0.00    0.00       3/3           GetPot::__parse_argument_vector(std::vector<std::string, std::allocator<std::string> > const&) [197]
[194]    0.0    0.00    0.00       3         GetPot::__process_section_label(std::string const&, std::vector<std::string, std::allocator<std::string> >&) [194]
                0.00    0.00       3/3           std::vector<std::string, std::allocator<std::string> >::erase(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >) [195]
                0.00    0.00       1/75          std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [171]
-----------------------------------------------
                0.00    0.00       3/3           GetPot::__process_section_label(std::string const&, std::vector<std::string, std::allocator<std::string> >&) [194]
[195]    0.0    0.00    0.00       3         std::vector<std::string, std::allocator<std::string> >::erase(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >) [195]
-----------------------------------------------
                0.00    0.00       2/2           global constructors keyed to grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [192]
[196]    0.0    0.00    0.00       2         GetPot::__read_in_stream(std::istream&) [196]
                0.00    0.00      32/32          GetPot::__get_next_token(std::istream&) [174]
                0.00    0.00      18/1163        std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [141]
                0.00    0.00      17/75          std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [171]
                0.00    0.00       2/50          std::vector<std::string, std::allocator<std::string> >::~vector() [173]
-----------------------------------------------
                0.00    0.00       2/2           global constructors keyed to grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [192]
[197]    0.0    0.00    0.00       2         GetPot::__parse_argument_vector(std::vector<std::string, std::allocator<std::string> > const&) [197]
                0.00    0.00      29/75          std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) [171]
                0.00    0.00      11/50          std::vector<std::string, std::allocator<std::string> >::~vector() [173]
                0.00    0.00       9/1163        std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [141]
                0.00    0.00       9/25          GetPot::__find_variable(char const*) const [175]
                0.00    0.00       7/3015        std::vector<unsigned int, std::allocator<unsigned int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&) [131]
                0.00    0.00       6/6           std::vector<GetPot::variable, std::allocator<GetPot::variable> >::_M_insert_aux(__gnu_cxx::__normal_iterator<GetPot::variable*, std::vector<GetPot::variable, std::allocator<GetPot::variable> > >, GetPot::variable const&) [187]
                0.00    0.00       3/17          std::vector<std::string, std::allocator<std::string> >::operator=(std::vector<std::string, std::allocator<std::string> > const&) [181]
                0.00    0.00       3/3           GetPot::__process_section_label(std::string const&, std::vector<std::string, std::allocator<std::string> >&) [194]
                0.00    0.00       3/17          __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > > std::__find<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&, std::random_access_iterator_tag) [182]
-----------------------------------------------
                0.00    0.00       1/2           main [1]
                0.00    0.00       1/2           grid::~grid() [255]
[198]    0.0    0.00    0.00       2         GetPot::~GetPot() [198]
-----------------------------------------------
                0.00    0.00       2/2           grid::build_single_BP_quantities(Point2d<unsigned int> const&, Point2d<unsigned int> const&, ghost_quantities, std::vector<ghost_quantities, std::allocator<ghost_quantities> >&) [91]
[199]    0.0    0.00    0.00       2         std::vector<ghost_quantities, std::allocator<ghost_quantities> >::_M_insert_aux(__gnu_cxx::__normal_iterator<ghost_quantities*, std::vector<ghost_quantities, std::allocator<ghost_quantities> > >, ghost_quantities const&) [199]
-----------------------------------------------
                0.00    0.00       2/2           global constructors keyed to grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [192]
[200]    0.0    0.00    0.00       2         void std::vector<std::string, std::allocator<std::string> >::_M_range_insert<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > > >(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::forward_iterator_tag) [200]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[201]    0.0    0.00    0.00       1         global constructors keyed to set_gq(ghost_quantities&, Point2d<double> const&, Point2d<double>&, Point2d<double> const&, Point2d<unsigned int> const&, Point2d<unsigned int> const&, unsigned int const&, unsigned int const&) [201]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[202]    0.0    0.00    0.00       1         global constructors keyed to wet_unknown::wet_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [202]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[203]    0.0    0.00    0.00       1         global constructors keyed to FINITE_VOLUME::cell_unknown::cell_unknown(grid&, unsigned int const&) [203]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[204]    0.0    0.00    0.00       1         global constructors keyed to FINITE_VOLUME::cell_evolution(double&, double&, double&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, double const&) [204]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[205]    0.0    0.00    0.00       1         global constructors keyed to FINITE_VOLUME::reconstruction(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&) [205]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[206]    0.0    0.00    0.00       1         global constructors keyed to FINITE_VOLUME::cell_reconstruction(IMMERSED_BOUNDARY::stencil_values const&, double&, double&, double&, double&) [206]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[207]    0.0    0.00    0.00       1         global constructors keyed to FINITE_VOLUME::interfaces_boundary_conditions(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&) [207]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[208]    0.0    0.00    0.00       1         global constructors keyed to FINITE_VOLUME::C_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, FINITE_VOLUME::double3&) [208]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[209]    0.0    0.00    0.00       1         global constructors keyed to FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)) [209]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[210]    0.0    0.00    0.00       1         global constructors keyed to FINITE_VOLUME::flux_x(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&) [210]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[211]    0.0    0.00    0.00       1         global constructors keyed to FINITE_VOLUME::minmod(double const&, double const&, double const&) [211]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[212]    0.0    0.00    0.00       1         global constructors keyed to FINITE_VOLUME::x_speed(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&) [212]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[213]    0.0    0.00    0.00       1         global constructors keyed to FINITE_VOLUME::evolution(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, unknown&, unknown&, unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [213]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[214]    0.0    0.00    0.00       1         global constructors keyed to FINITE_VOLUME::time_step(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [214]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[215]    0.0    0.00    0.00       1         global constructors keyed to ghost_unknown::ghost_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [215]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[216]    0.0    0.00    0.00       1         global constructors keyed to IMMERSED_BOUNDARY::find_label(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, Point2d<double> const&) [216]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[217]    0.0    0.00    0.00       1         global constructors keyed to IMMERSED_BOUNDARY::int2string(int const&) [217]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[218]    0.0    0.00    0.00       1         global constructors keyed to IMMERSED_BOUNDARY::find_BP_RP_normal(Point2d<double> const&, Point2d<double> const&, Point2d<double> const&, Point2d<double>&, Point2d<double>&, Point2d<double>&) [218]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[219]    0.0    0.00    0.00       1         global constructors keyed to IMMERSED_BOUNDARY::relative_position(Point2d<double> const&, Point2d<double> const&, double const&, double const&) [219]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[220]    0.0    0.00    0.00       1         global constructors keyed to IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [220]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[221]    0.0    0.00    0.00       1         global constructors keyed to IMMERSED_BOUNDARY::find_zero(Point2d<double> const&, Point2d<double> const&, double (* const&)(Point2d<double> const&), bool const&, double const&) [221]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[222]    0.0    0.00    0.00       1         global constructors keyed to INITIAL_CONDITIONS::z_init(Point2d<double> const&) [222]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[223]    0.0    0.00    0.00       1         global constructors keyed to cell::cell() [223]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[224]    0.0    0.00    0.00       1         global constructors keyed to grid::V_position(Point2d<unsigned int> const&, Point2d<double>&) [224]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[225]    0.0    0.00    0.00       1         global constructors keyed to grid::build_edge(Point2d<double> const&, Point2d<unsigned int> const&, double (* const&)(Point2d<double> const&), Point2d<double> (* const&)(Point2d<double> const&)) [225]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[226]    0.0    0.00    0.00       1         global constructors keyed to grid::join_edges(Point2d<unsigned int> const&, Point2d<double>*&, std::map<Point2d<unsigned int>, std::pair<Point2d<double>, Point2d<double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, std::pair<Point2d<double>, Point2d<double> > > > >&, int&, std::set<Point2d<unsigned int>, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<Point2d<unsigned int> > >&) [226]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[227]    0.0    0.00    0.00       1         global constructors keyed to grid::valid_edge(Point2d<unsigned int> const&, Point2d<double> const&, Point2d<double> const&, double const&, double const&, BOUNDARY::side&) [227]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[228]    0.0    0.00    0.00       1         global constructors keyed to grid::set_BC_type(unsigned int const&) [228]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[229]    0.0    0.00    0.00       1         global constructors keyed to grid::cutted_center(Point2d<unsigned int> const&) [229]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[230]    0.0    0.00    0.00       1         global constructors keyed to grid::move_vertices() [230]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[231]    0.0    0.00    0.00       1         global constructors keyed to grid::set_wet_cells() [231]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[232]    0.0    0.00    0.00       1         global constructors keyed to grid::writeout_domain(bool const&) [232]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[233]    0.0    0.00    0.00       1         global constructors keyed to grid::boundary_conditions() [233]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[234]    0.0    0.00    0.00       1         global constructors keyed to grid::remove_invalid_edges(bool&) [234]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[235]    0.0    0.00    0.00       1         global constructors keyed to grid::last_common_ctrs_part() [235]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[236]    0.0    0.00    0.00       1         global constructors keyed to grid::calculate_GP_quantities() [236]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[237]    0.0    0.00    0.00       1         global constructors keyed to grid::calculate_RP_quantities() [237]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[238]    0.0    0.00    0.00       1         global constructors keyed to grid::set_area_zero_on_wet_side() [238]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[239]    0.0    0.00    0.00       1         global constructors keyed to grid::build_interpolation_matrices() [239]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[240]    0.0    0.00    0.00       1         global constructors keyed to grid::set_cut() [240]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[241]    0.0    0.00    0.00       1         global constructors keyed to grid::set_wet2() [241]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[242]    0.0    0.00    0.00       1         global constructors keyed to grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool) [242]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[243]    0.0    0.00    0.00       1         global constructors keyed to grid::set_L_adj(Point2d<unsigned int> const&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > >&) [243]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[244]    0.0    0.00    0.00       1         global constructors keyed to grid::grid(double (* const&)(Point2d<double> const&), Point2d<double> (* const&)(Point2d<double> const&), std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [244]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[245]    0.0    0.00    0.00       1         global constructors keyed to grid::~grid() [245]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[246]    0.0    0.00    0.00       1         global constructors keyed to ERRORS::errors::errors(int const&) [246]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[247]    0.0    0.00    0.00       1         global constructors keyed to unknown::unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [247]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[248]    0.0    0.00    0.00       1         global constructors keyed to boundary::boundary() [248]
-----------------------------------------------
                0.00    0.00       1/1           __do_global_ctors_aux [417]
[249]    0.0    0.00    0.00       1         global constructors keyed to grid::get_Nx() const [249]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[250]    0.0    0.00    0.00       1         FINITE_VOLUME::cell_unknown::~cell_unknown() [250]
                0.00    0.00       5/18          std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >*) [179]
                0.00    0.00       5/18          std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, double> >*) [180]
-----------------------------------------------
                0.00    0.00       1/1           grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
[251]    0.0    0.00    0.00       1         cell::cell(unsigned int const&) [251]
-----------------------------------------------
                0.00    0.00       1/1           grid::info() [254]
[252]    0.0    0.00    0.00       1         grid::get_N_edges() [252]
-----------------------------------------------
                0.00    0.00       1/1           grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
[253]    0.0    0.00    0.00       1         grid::writeout_real_domain(std::vector<std::pair<Point2d<unsigned int>, Point2d<double> >, std::allocator<std::pair<Point2d<unsigned int>, Point2d<double> > > > const&) [253]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[254]    0.0    0.00    0.00       1         grid::info() [254]
                0.00    0.00       1/12897       boundary::get_N_edges() [129]
                0.00    0.00       1/1           grid::get_N_edges() [252]
                0.00    0.00       1/1           grid::get_N_wet_cells() const [259]
                0.00    0.00       1/1           grid::get_N_ghost_cells() const [260]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[255]    0.0    0.00    0.00       1         grid::~grid() [255]
                0.00    0.00       1/1           std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc>, std::_Select1st<std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc> >*) [266]
                0.00    0.00       1/1           std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >*) [268]
                0.00    0.00       1/1           std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >*) [267]
                0.00    0.00       1/1           std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, ghost_cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, ghost_cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, ghost_cell> >*) [264]
                0.00    0.00       1/1           std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, cell> >*) [265]
                0.00    0.00       1/2           GetPot::~GetPot() [198]
-----------------------------------------------
                0.00    0.00       1/1           grid::build_interpolation_matrices() [88]
[256]    0.0    0.00    0.00       1         Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::FullPivLU() [256]
-----------------------------------------------
                0.00    0.00       1/1           grid::build_interpolation_matrices() [88]
[257]    0.0    0.00    0.00       1         Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::FullPivLU() [257]
-----------------------------------------------
                0.00    0.00       1/1           grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [36]
[258]    0.0    0.00    0.00       1         boundary::boundary() [258]
-----------------------------------------------
                0.00    0.00       1/1           grid::info() [254]
[259]    0.0    0.00    0.00       1         grid::get_N_wet_cells() const [259]
-----------------------------------------------
                0.00    0.00       1/1           grid::info() [254]
[260]    0.0    0.00    0.00       1         grid::get_N_ghost_cells() const [260]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[261]    0.0    0.00    0.00       1         grid::get_dx() const [261]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[262]    0.0    0.00    0.00       1         grid::get_dy() const [262]
-----------------------------------------------
                0.00    0.00       1/1           grid::last_common_ctrs_part() [38]
[263]    0.0    0.00    0.00       1         std::vector<unsigned int, std::allocator<unsigned int> >::_M_fill_assign(unsigned int, unsigned int const&) [263]
-----------------------------------------------
                                 384             std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, ghost_cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, ghost_cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, ghost_cell> >*) [264]
                0.00    0.00       1/1           grid::~grid() [255]
[264]    0.0    0.00    0.00       1+384     std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, ghost_cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, ghost_cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, ghost_cell> >*) [264]
                0.00    0.00     384/1906        cell::~cell() [136]
                                 384             std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, ghost_cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, ghost_cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, ghost_cell> >*) [264]
-----------------------------------------------
                               40804             std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, cell> >*) [265]
                0.00    0.00       1/1           grid::~grid() [255]
[265]    0.0    0.00    0.00       1+40804   std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, cell> >*) [265]
                0.00    0.00   40804/122413      cell::~cell() [121]
                               40804             std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, cell> >*) [265]
-----------------------------------------------
                0.00    0.00       1/1           grid::~grid() [255]
[266]    0.0    0.00    0.00       1         std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc>, std::_Select1st<std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc> >*) [266]
-----------------------------------------------
                                   4             std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >*) [267]
                0.00    0.00       1/1           grid::~grid() [255]
[267]    0.0    0.00    0.00       1+4       std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >*) [267]
                                   4             std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >*) [267]
-----------------------------------------------
                                 376             std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >*) [268]
                0.00    0.00       1/1           grid::~grid() [255]
[268]    0.0    0.00    0.00       1+376     std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >*) [268]
                                 376             std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >*) [268]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [104] T.3135                  [9] FINITE_VOLUME::triplet::triplet(unknown&, unknown&, unknown&, Point2d<unsigned int> const&, unknown_position::position const&) [165] Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::FullPivLU(Eigen::Matrix<double, 8, 8, 0, 8, 8> const&)
 [105] T.3146                 [58] FINITE_VOLUME::triplet::triplet(FINITE_VOLUME::triplet const&) [166] Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::FullPivLU(Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> > const&)
 [106] T.3147                 [33] FINITE_VOLUME::x_speed(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&) [257] Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::FullPivLU()
  [81] T.3151                 [32] FINITE_VOLUME::y_speed(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&) [174] GetPot::__get_next_token(std::istream&)
 [201] global constructors keyed to set_gq(ghost_quantities&, Point2d<double> const&, Point2d<double>&, Point2d<double> const&, Point2d<unsigned int> const&, Point2d<unsigned int> const&, unsigned int const&, unsigned int const&) [6] FINITE_VOLUME::evolution(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, unknown&, unknown&, unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [196] GetPot::__read_in_stream(std::istream&)
 [202] global constructors keyed to wet_unknown::wet_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [22] FINITE_VOLUME::time_step(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [197] GetPot::__parse_argument_vector(std::vector<std::string, std::allocator<std::string> > const&)
 [203] global constructors keyed to FINITE_VOLUME::cell_unknown::cell_unknown(grid&, unsigned int const&) [28] ghost_unknown::import_unknown(grid&, unsigned int const&) [194] GetPot::__process_section_label(std::string const&, std::vector<std::string, std::allocator<std::string> >&)
 [204] global constructors keyed to FINITE_VOLUME::cell_evolution(double&, double&, double&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, double const&) [87] ghost_unknown::ghost_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [186] GetPot::variable::variable(GetPot::variable const&)
 [205] global constructors keyed to FINITE_VOLUME::reconstruction(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&) [168] ghost_quantities::ghost_quantities(ghost_quantities const&) [198] GetPot::~GetPot()
 [206] global constructors keyed to FINITE_VOLUME::cell_reconstruction(IMMERSED_BOUNDARY::stencil_values const&, double&, double&, double&, double&) [188] IMMERSED_BOUNDARY::find_label(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, Point2d<double> const&) [15] unknown::export_unknown()
 [207] global constructors keyed to FINITE_VOLUME::interfaces_boundary_conditions(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&) [154] IMMERSED_BOUNDARY::int2string(int const&) [13] unknown::import_unknown()
 [208] global constructors keyed to FINITE_VOLUME::C_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, FINITE_VOLUME::double3&) [143] IMMERSED_BOUNDARY::find_BP_RP_normal(Point2d<double> const&, Point2d<double> const&, Point2d<double> const&, Point2d<double>&, Point2d<double>&, Point2d<double>&) [3] unknown::get_stencil_value(Point2d<unsigned int> const&, unknown_position::position const&, bool const&)
 [209] global constructors keyed to FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)) [146] IMMERSED_BOUNDARY::relative_position(Point2d<double> const&, Point2d<double> const&, double const&, double const&) [8] unknown::get_stencil_values(Point2d<unsigned int> const&)
 [210] global constructors keyed to FINITE_VOLUME::flux_x(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&) [2] IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [42] unknown::unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&))
 [211] global constructors keyed to FINITE_VOLUME::minmod(double const&, double const&, double const&) [124] INITIAL_CONDITIONS::z_init(Point2d<double> const&) [4] unknown::operator()(Point2d<unsigned int> const&)
 [212] global constructors keyed to FINITE_VOLUME::x_speed(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&) [125] INITIAL_CONDITIONS::Qx_init(Point2d<double> const&) [26] unknown::operator()(Point2d<unsigned int> const&, Point2d<unsigned int> const&)
 [213] global constructors keyed to FINITE_VOLUME::evolution(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, unknown&, unknown&, unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [126] INITIAL_CONDITIONS::Qy_init(Point2d<double> const&) [5] unknown::operator()(unsigned int const&, unsigned int const&)
 [214] global constructors keyed to FINITE_VOLUME::time_step(FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&, double const&, double const&, double const&) [120] cell::get_center() [27] unknown::operator()(unsigned int const&, unsigned int const&, unsigned int const&, unsigned int const&)
 [215] global constructors keyed to ghost_unknown::ghost_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [123] cell::set_center(double const&, double const&) [75] boundary::get_n_edge(Point2d<unsigned int> const&)
 [216] global constructors keyed to IMMERSED_BOUNDARY::find_label(std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&, Point2d<double> const&) [45] cell::get_unknown(unsigned int const&) [129] boundary::get_N_edges()
 [217] global constructors keyed to IMMERSED_BOUNDARY::int2string(int const&) [39] cell::set_unknown(unsigned int const&, double const&) [184] boundary::remove_edge(unsigned int, BOUNDARY::side const&)
 [218] global constructors keyed to IMMERSED_BOUNDARY::find_BP_RP_normal(Point2d<double> const&, Point2d<double> const&, Point2d<double> const&, Point2d<double>&, Point2d<double>&, Point2d<double>&) [82] cell::get_boundary() [147] boundary::get_last_vertex()
 [219] global constructors keyed to IMMERSED_BOUNDARY::relative_position(Point2d<double> const&, Point2d<double> const&, double const&, double const&) [119] cell::set_boundary(CELL::boundary const&) [183] boundary::set_edge_vertex(BOUNDARY::side const&, Point2d<double> const&, unsigned int)
 [220] global constructors keyed to IMMERSED_BOUNDARY::compare(Point2d<unsigned int> const&, Point2d<unsigned int> const&) [118] cell::set_type(CELL::type const&) [148] boundary::add_edge(Point2d<double> const&, Point2d<unsigned int> const&)
 [221] global constructors keyed to IMMERSED_BOUNDARY::find_zero(Point2d<double> const&, Point2d<double> const&, double (* const&)(Point2d<double> const&), bool const&, double const&) [122] cell::cell(cell const&) [83] boundary::get_label(unsigned int const&)
 [222] global constructors keyed to INITIAL_CONDITIONS::z_init(Point2d<double> const&) [251] cell::cell(unsigned int const&) [258] boundary::boundary()
 [223] global constructors keyed to cell::cell() [142] cell::cell(cell const&) [117] ghost_cell::get_number_of_adj_wet_cells() const
 [224] global constructors keyed to grid::V_position(Point2d<unsigned int> const&, Point2d<double>&) [121] cell::~cell() [48] ghost_cell::get_GQs() const
 [225] global constructors keyed to grid::build_edge(Point2d<double> const&, Point2d<unsigned int> const&, double (* const&)(Point2d<double> const&), Point2d<double> (* const&)(Point2d<double> const&)) [136] cell::~cell() [46] cell::get_type() const
 [226] global constructors keyed to grid::join_edges(Point2d<unsigned int> const&, Point2d<double>*&, std::map<Point2d<unsigned int>, std::pair<Point2d<double>, Point2d<double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, std::pair<Point2d<double>, Point2d<double> > > > >&, int&, std::set<Point2d<unsigned int>, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<Point2d<unsigned int> > >&) [138] cell::operator=(cell const&) [176] grid::get_wet_cells() const
 [227] global constructors keyed to grid::valid_edge(Point2d<unsigned int> const&, Point2d<double> const&, Point2d<double> const&, double const&, double const&, BOUNDARY::side&) [145] grid::V_position(Point2d<unsigned int> const&, Point2d<double>&) [177] grid::get_N_equations() const
 [228] global constructors keyed to grid::set_BC_type(unsigned int const&) [133] grid::valid_edge(Point2d<unsigned int> const&, Point2d<double> const&, Point2d<double> const&, double const&, double const&, BOUNDARY::side&) [259] grid::get_N_wet_cells() const
 [229] global constructors keyed to grid::cutted_center(Point2d<unsigned int> const&) [252] grid::get_N_edges() [178] grid::get_ghost_cells() const
 [230] global constructors keyed to grid::move_vertices() [193] grid::set_all_dry() [260] grid::get_N_ghost_cells() const
 [231] global constructors keyed to grid::set_wet_cells() [73] grid::cutted_center(Point2d<unsigned int> const&) [261] grid::get_dx() const
 [232] global constructors keyed to grid::writeout_domain(bool const&) [157] grid::find_SW_label(Point2d<double> const&) [262] grid::get_dy() const
 [233] global constructors keyed to grid::boundary_conditions() [69] grid::move_vertices() [161] void Eigen::TriangularBase<Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, 4, -1, true, true> const, 5u> >::evalToLazy<Eigen::Matrix<double, 4, -1, 0, 4, 4> >(Eigen::MatrixBase<Eigen::Matrix<double, 4, -1, 0, 4, 4> >&) const
 [234] global constructors keyed to grid::remove_invalid_edges(bool&) [99] grid::set_wet_cells() [167] void Eigen::TriangularBase<Eigen::TriangularView<Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, 8, -1, true, true> const, 5u> >::evalToLazy<Eigen::Matrix<double, 8, -1, 0, 8, 8> >(Eigen::MatrixBase<Eigen::Matrix<double, 8, -1, 0, 8, 8> >&) const
 [235] global constructors keyed to grid::last_common_ctrs_part() [189] grid::closest_corner(Point2d<unsigned int> const&, Point2d<double> const&) [40] void Eigen::internal::solve_retval<Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >, Eigen::Matrix<double, 4, 1, 0, 4, 1> >::evalTo<Eigen::Matrix<double, 4, 1, 0, 4, 1> >(Eigen::Matrix<double, 4, 1, 0, 4, 1>&) const
 [236] global constructors keyed to grid::calculate_GP_quantities() [149] grid::closest_vertex(Point2d<double> const&, Point2d<double> const&, Point2d<double> const&) [34] void Eigen::internal::solve_retval<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::Matrix<double, 8, 1, 0, 8, 1> >::evalTo<Eigen::Matrix<double, 8, 1, 0, 8, 1> >(Eigen::Matrix<double, 8, 1, 0, 8, 1>&) const
 [237] global constructors keyed to grid::calculate_RP_quantities() [190] grid::set_all_not_cut() [162] Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::reconstructedMatrix() const
 [238] global constructors keyed to grid::set_area_zero_on_wet_side() [79] grid::writeout_domain(bool const&) [86] Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::reconstructedMatrix() const
 [239] global constructors keyed to grid::build_interpolation_matrices() [63] grid::build_ghost_cells() [175] GetPot::__find_variable(char const*) const
 [240] global constructors keyed to grid::set_cut() [18] grid::get_unknown_value(Point2d<unsigned int> const&, unsigned int const&) [74] boundary::get_edge_vertex(BOUNDARY::side const&, unsigned int) const
 [241] global constructors keyed to grid::set_wet2() [66] grid::writeout_unknowns(std::string const&) [170] std::vector<std::string, std::allocator<std::string> >::_M_check_len(unsigned int, char const*) const
 [242] global constructors keyed to grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool) [59] grid::set_unknown_values(double (*)(Point2d<double> const&), unsigned int const&) [155] char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag)
 [243] global constructors keyed to grid::set_L_adj(Point2d<unsigned int> const&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > >&) [17] grid::set_unknown_values(Point2d<unsigned int> const&, unsigned int const&, double const&) [96] std::map<Point2d<unsigned int>, ghost_cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::operator[](Point2d<unsigned int> const&)
 [244] global constructors keyed to grid::grid(double (* const&)(Point2d<double> const&), Point2d<double> (* const&)(Point2d<double> const&), std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [19] grid::boundary_conditions() [21] std::map<Point2d<unsigned int>, cell, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::operator[](Point2d<unsigned int> const&)
 [192] global constructors keyed to grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [92] grid::build_GPs_4x4_matrix(Point2d<unsigned int> const&) [185] std::list<std::pair<Point2d<double>, Point2d<unsigned int> >, std::allocator<std::pair<Point2d<double>, Point2d<unsigned int> > > >::erase(std::_List_iterator<std::pair<Point2d<double>, Point2d<unsigned int> > >)
 [245] global constructors keyed to grid::~grid() [93] grid::build_GPs_8x8_matrix(Point2d<unsigned int> const&) [128] std::vector<ghost_value, std::allocator<ghost_value> >::_M_insert_aux(__gnu_cxx::__normal_iterator<ghost_value*, std::vector<ghost_value, std::allocator<ghost_value> > >, ghost_value const&)
 [246] global constructors keyed to ERRORS::errors::errors(int const&) [77] grid::remove_invalid_edges(bool&) [199] std::vector<ghost_quantities, std::allocator<ghost_quantities> >::_M_insert_aux(__gnu_cxx::__normal_iterator<ghost_quantities*, std::vector<ghost_quantities, std::allocator<ghost_quantities> > >, ghost_quantities const&)
 [247] global constructors keyed to unknown::unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [253] grid::writeout_real_domain(std::vector<std::pair<Point2d<unsigned int>, Point2d<double> >, std::allocator<std::pair<Point2d<unsigned int>, Point2d<double> > > > const&) [130] std::vector<ghost_quantities, std::allocator<ghost_quantities> >::~vector()
 [248] global constructors keyed to boundary::boundary() [38] grid::last_common_ctrs_part() [56] std::vector<ghost_quantities, std::allocator<ghost_quantities> >::operator=(std::vector<ghost_quantities, std::allocator<ghost_quantities> > const&)
 [249] global constructors keyed to grid::get_Nx() const [94] grid::set_wet_cutted_centers() [135] std::vector<Point2d<double>, std::allocator<Point2d<double> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point2d<double>*, std::vector<Point2d<double>, std::allocator<Point2d<double> > > >, Point2d<double> const&)
 [172] global constructors keyed to main [50] grid::calculate_GP_quantities() [158] std::vector<Point2d<double>, std::allocator<Point2d<double> > >::_M_fill_insert(__gnu_cxx::__normal_iterator<Point2d<double>*, std::vector<Point2d<double>, std::allocator<Point2d<double> > > >, unsigned int, Point2d<double> const&)
  [70] ghost_cell::get_RP_unknown(unsigned int const&, unsigned int const&) [20] grid::calculate_RP_quantities() [68] std::vector<Point2d<double>, std::allocator<Point2d<double> > >::operator=(std::vector<Point2d<double>, std::allocator<Point2d<double> > > const&)
  [71] ghost_cell::set_GP_unknown(unsigned int const&, unsigned int const&, double const&) [102] grid::build_all_wet_4x4_matrix(Point2d<unsigned int> const&) [132] std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point2d<unsigned int>*, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > >, Point2d<unsigned int> const&)
  [72] ghost_cell::set_RP_unknown(unsigned int const&, unsigned int const&, double const&) [78] grid::cutted_center_by_diagonal(Point2d<unsigned int> const&) [187] std::vector<GetPot::variable, std::allocator<GetPot::variable> >::_M_insert_aux(__gnu_cxx::__normal_iterator<GetPot::variable*, std::vector<GetPot::variable, std::allocator<GetPot::variable> > >, GetPot::variable const&)
 [156] ghost_cell::set_GQs(std::vector<ghost_quantities, std::allocator<ghost_quantities> > const&) [95] grid::find_number_ghost_corners(Point2d<unsigned int> const&) [171] std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
 [151] ghost_cell::ghost_cell() [90] grid::set_area_zero_on_wet_side() [200] void std::vector<std::string, std::allocator<std::string> >::_M_range_insert<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > > >(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::forward_iterator_tag)
 [152] ghost_cell::~ghost_cell() [91] grid::build_single_BP_quantities(Point2d<unsigned int> const&, Point2d<unsigned int> const&, ghost_quantities, std::vector<ghost_quantities, std::allocator<ghost_quantities> >&) [195] std::vector<std::string, std::allocator<std::string> >::erase(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >)
  [98] ghost_cell::operator=(ghost_cell const&) [88] grid::build_interpolation_matrices() [173] std::vector<std::string, std::allocator<std::string> >::~vector()
  [14] wet_unknown::export_unknown(grid&, unsigned int const&) [254] grid::info() [181] std::vector<std::string, std::allocator<std::string> >::operator=(std::vector<std::string, std::allocator<std::string> > const&)
  [16] wet_unknown::import_unknown(grid&, unsigned int const&) [89] grid::set_cut() [127] std::vector<double, std::allocator<double> >::at(unsigned int)
  [44] wet_unknown::wet_unknown(grid&, unsigned int const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [51] grid::set_wet2() [139] std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&)
  [47] FINITE_VOLUME::cell_unknown::cell_unknown(grid&, unsigned int const&) [191] grid::cut_cells(Point2d<unsigned int> const&, Point2d<double>&, Point2d<unsigned int> const&, Point2d<double>&, double const&, double const&, bool) [131] std::vector<unsigned int, std::allocator<unsigned int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&)
 [250] FINITE_VOLUME::cell_unknown::~cell_unknown() [134] grid::set_L_adj(Point2d<unsigned int> const&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > >&) [263] std::vector<unsigned int, std::allocator<unsigned int> >::_M_fill_assign(unsigned int, unsigned int const&)
  [23] FINITE_VOLUME::cell_evolution(double&, double&, double&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, double const&) [36] grid::grid(std::string const&, std::string const&, bool (* const&)(Point2d<unsigned int> const&, Point2d<unsigned int> const&)) [100] std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, ghost_cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, ghost_cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, ghost_cell> const&)
   [7] FINITE_VOLUME::reconstruction(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, std::vector<Point2d<unsigned int>, std::allocator<Point2d<unsigned int> > > const&) [255] grid::~grid() [264] std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, ghost_cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, ghost_cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, ghost_cell> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, ghost_cell> >*)
  [64] FINITE_VOLUME::interfaces_values::interfaces_values(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&) [84] Eigen::Matrix<double, 8, 8, 0, 8, 8>& Eigen::MatrixBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::lazyAssign<Eigen::GeneralProduct<Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8>, 5>, Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8> >(Eigen::ProductBase<Eigen::GeneralProduct<Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8>, 5>, Eigen::Matrix<double, 8, -1, 0, 8, 8>, Eigen::Matrix<double, -1, 8, 0, 8, 8> > const&) [80] std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, cell> const&)
  [60] FINITE_VOLUME::initial_conditions(grid&) [163] Eigen::Matrix<double, 4, 4, 0, 4, 4>& Eigen::PlainObjectBase<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::_set_noalias<Eigen::Matrix<double, 4, 4, 0, 4, 4> >(Eigen::DenseBase<Eigen::Matrix<double, 4, 4, 0, 4, 4> > const&) [265] std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, cell>, std::_Select1st<std::pair<Point2d<unsigned int> const, cell> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, cell> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, cell> >*)
  [29] FINITE_VOLUME::cell_reconstruction(IMMERSED_BOUNDARY::stencil_values const&, double&, double&, double&, double&) [137] Eigen::Matrix<double, 8, 8, 0, 8, 8>& Eigen::PlainObjectBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::_set_noalias<Eigen::Matrix<double, 8, 8, 0, 8, 8> >(Eigen::DenseBase<Eigen::Matrix<double, 8, 8, 0, 8, 8> > const&) [266] std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc>, std::_Select1st<std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, IMMERSED_BOUNDARY::M6M3_LU_non_cc> >*)
  [10] FINITE_VOLUME::interfaces_boundary_conditions(grid&, unknown&, unknown&, unknown&) [41] Eigen::internal::triangular_solve_vector<double, double, int, 1, 2, false, 0>::run(int, double const*, int, double*) [103] std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > const&)
  [12] FINITE_VOLUME::interfaces_boundary_conditions(grid&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&, FINITE_VOLUME::cell_unknown&) [67] Eigen::internal::triangular_solve_vector<double, double, int, 1, 5, false, 0>::run(int, double const*, int, double*) [267] std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >*)
  [24] FINITE_VOLUME::C_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::interfaces_values const&, FINITE_VOLUME::interfaces_values const&, double const&, double const&, FINITE_VOLUME::double3&) [54] Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>, 1, 2, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>&) [101] std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > const&)
  [25] FINITE_VOLUME::H_flux(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&, void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::triplet const&, double&), void (* const&)(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&)) [65] Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>, 1, 5, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 4, 4, 0, 4, 4> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 4, 1, 0, 4, 1>, -1, 1, false, true>&) [268] std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), Eigen::aligned_allocator<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, std::pair<Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >, Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > > > >*)
  [31] FINITE_VOLUME::flux_x(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&) [57] Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>, 1, 2, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>&) [97] std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > const&)
  [30] FINITE_VOLUME::flux_y(FINITE_VOLUME::triplet const&, FINITE_VOLUME::double3&) [52] Eigen::internal::triangular_solver_selector<Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>, 1, 5, 0, 1>::run(Eigen::Block<Eigen::Matrix<double, 8, 8, 0, 8, 8> const, -1, -1, false, true> const&, Eigen::Block<Eigen::Matrix<double, 8, 1, 0, 8, 1>, -1, 1, false, true>&) [179] std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > >, std::_Select1st<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, std::vector<ghost_value, std::allocator<ghost_value> > > >*)
  [35] FINITE_VOLUME::minmod(double const&, double const&, double const&) [85] Eigen::internal::general_matrix_matrix_product<int, double, 0, false, double, 0, false, 0>::run(int, int, int, double const*, int, double const*, int, double*, int, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<int>*) [76] std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<Point2d<unsigned int> const, double> const&)
  [53] FINITE_VOLUME::double3::double3(double const&, double const&, double const&) [150] Eigen::DenseBase<Eigen::Matrix<bool, 4, 1, 0, 4, 1> >::fill(bool const&) [49] std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_insert_unique(std::pair<Point2d<unsigned int> const, double> const&)
  [61] FINITE_VOLUME::double3::double3() [153] Eigen::DenseBase<Eigen::Matrix<bool, 8, 1, 0, 8, 1> >::fill(bool const&) [180] std::_Rb_tree<Point2d<unsigned int>, std::pair<Point2d<unsigned int> const, double>, std::_Select1st<std::pair<Point2d<unsigned int> const, double> >, bool (*)(Point2d<unsigned int> const&, Point2d<unsigned int> const&), std::allocator<std::pair<Point2d<unsigned int> const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<Point2d<unsigned int> const, double> >*)
  [62] FINITE_VOLUME::double3::operator=(FINITE_VOLUME::double3 const&) [159] Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::compute(Eigen::Matrix<double, 4, 4, 0, 4, 4> const&) [169] std::string* std::__uninitialized_copy_a<std::string*, std::string*, std::string>(std::string*, std::string*, std::string*, std::allocator<std::string>&)
  [37] FINITE_VOLUME::double3::operator-(FINITE_VOLUME::double3 const&) [160] Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::FullPivLU(Eigen::Matrix<double, 4, 4, 0, 4, 4> const&) [182] __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > > std::__find<__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, __gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&, std::random_access_iterator_tag)
  [43] FINITE_VOLUME::double3::operator*(double const&) [140] Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::FullPivLU(Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> > const&) [144] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  [55] FINITE_VOLUME::double3::operator+(FINITE_VOLUME::double3 const&) [256] Eigen::FullPivLU<Eigen::Matrix<double, 4, 4, 0, 4, 4> >::FullPivLU() [141] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  [11] FINITE_VOLUME::triplet::triplet(unknown&, unknown&, unknown&, Point2d<unsigned int> const&) [164] Eigen::FullPivLU<Eigen::Matrix<double, 8, 8, 0, 8, 8> >::compute(Eigen::Matrix<double, 8, 8, 0, 8, 8> const&)
